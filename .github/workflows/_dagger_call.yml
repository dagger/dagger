name: "dagger call"

on:
  workflow_call:
    inputs:
      function:
        description: "The Dagger function to call"
        type: string
        required: true

      dev-engine:
        description: "Whether to run against a dev Engine"
        type: boolean
        default: false
        required: false

      timeout:
        description: "How many minutes to timeout after"
        type: number
        required: false
        # None of our jobs should take longer than 30 mins to run.
        # If they do, set this explicitly.
        default: 30

      size:
        type: string
        default: "dagger-v0-11-6-4c-nvme"
        required: false

      dagger-version:
        type: string
        default: "0.11.6"
        required: false

jobs:
  # Use a free GitHub Actions runner when NOT running in the dagger/dagger repo
  github-free-runner:
    if: ${{ github.repository != 'dagger/dagger' }}
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: "ci/go.sum"
      - name: Install dagger
        run: |
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ inputs.dagger-version }} BIN_DIR=/usr/local/bin/ sudo -E sh
      - name: Waiting for Dagger Engine to be ready...
        run: |
          if [ "${{ inputs.dev-engine }}" == "true" ]
          then
            ./hack/dev

            export _EXPERIMENTAL_DAGGER_CLI_BIN="$PWD/bin/dagger"
            echo "_EXPERIMENTAL_DAGGER_CLI_BIN=${_EXPERIMENTAL_DAGGER_CLI_BIN}" >> "$GITHUB_ENV"
            export _EXPERIMENTAL_DAGGER_RUNNER_HOST=docker-container://dagger-engine.dev
            echo "_EXPERIMENTAL_DAGGER_RUNNER_HOST=${_EXPERIMENTAL_DAGGER_RUNNER_HOST}" >> "$GITHUB_ENV"

            chmod +x $_EXPERIMENTAL_DAGGER_CLI_BIN
          fi
          dagger call --help
      - name: Export secrets
        run: |
          echo "$SECRET_CONTEXT" | jq -r 'to_entries | .[] | "\(.key | ascii_upcase)=\(.value)"' >> $GITHUB_ENV
        env:
          SECRET_CONTEXT: ${{ toJson(secrets) }}
      - name: ${{ inputs.function }}
        run: |
          set -x
          if [ -f $HOME/.docker/config.json ]; then
            dagger call --source=".:default" --host-docker-config=file:"$HOME/.docker/config.json" ${{ inputs.function }}
          else
            dagger call --source=".:default" ${{ inputs.function }}
          fi

  # Use new Dagger runners when running in the dagger/dagger repo (including PRs)
  dagger-runner-v2:
    if: ${{ !inputs.dev-engine && github.repository == 'dagger/dagger' }}
    runs-on: ${{ inputs.size }}
    concurrency:
      group: ${{github.workflow}}-${{ inputs.function }}-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: "ci/go.sum"
      - name: Waiting for Dagger Engine to be ready...
        run: |
          dagger call --help
      - name: Export secrets
        run: |
          echo "$SECRET_CONTEXT" | jq -r 'to_entries | .[] | "\(.key | ascii_upcase)=\(.value)"' >> $GITHUB_ENV
        env:
          SECRET_CONTEXT: ${{ toJson(secrets) }}
      - name: ${{ inputs.function }}
        run: |
          set -x
          if [ -f $HOME/.docker/config.json ]; then
            dagger call --source=".:default" --host-docker-config=file:"$HOME/.docker/config.json" ${{ inputs.function }}
          else
            dagger call --source=".:default" ${{ inputs.function }}
          fi
        env:
          DAGGER_CLOUD_TOKEN: "p.eyJ1IjogIjFiZjEwMmRjLWYyZmQtNDVhNi1iNzM1LTgxNzI1NGFkZDU2ZiIsICJpZCI6ICIwYzhmMGY2Yy00YjY1LTRhODktYTI0YS0yN2NjNWNhNzNmNTcifQ.Em92UDP-KmcNd80Y-euTS2IrRkIE8qTisP3SXYkQi3c"

  dagger-runner-v2-dind:
    if: ${{ inputs.dev-engine && github.repository == 'dagger/dagger' }}
    runs-on: dagger-v0-11-6-dind
    concurrency:
      group: ${{github.workflow}}-${{ inputs.function }}-${{ github.head_ref || github.run_id }}-v2
      cancel-in-progress: true
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: "ci/go.sum"
      - name: Build Dagger Dev Engine...
        run: |
          ./hack/dev
          docker ps -a
          docker image ls
        env:
          DAGGER_CLOUD_TOKEN: "p.eyJ1IjogIjFiZjEwMmRjLWYyZmQtNDVhNi1iNzM1LTgxNzI1NGFkZDU2ZiIsICJpZCI6ICIwYzhmMGY2Yy00YjY1LTRhODktYTI0YS0yN2NjNWNhNzNmNTcifQ.Em92UDP-KmcNd80Y-euTS2IrRkIE8qTisP3SXYkQi3c"
      - name: Waiting for Dagger Dev Engine to be ready...
        run: |
          ./hack/with-dev dagger call --help
      - name: Export secrets
        run: |
          echo "$SECRET_CONTEXT" | jq -r 'to_entries | .[] | "\(.key | ascii_upcase)=\(.value)"' >> $GITHUB_ENV
        env:
          SECRET_CONTEXT: ${{ toJson(secrets) }}
      - name: ${{ inputs.function }}
        run: |
          set -x
          if [ -f $HOME/.docker/config.json ]; then
            ./hack/with-dev dagger call --source=".:default" --host-docker-config=file:"$HOME/.docker/config.json" ${{ inputs.function }}
          else
            ./hack/with-dev dagger call --source=".:default" ${{ inputs.function }}
          fi
        env:
          DAGGER_CLOUD_TOKEN: "p.eyJ1IjogIjFiZjEwMmRjLWYyZmQtNDVhNi1iNzM1LTgxNzI1NGFkZDU2ZiIsICJpZCI6ICIwYzhmMGY2Yy00YjY1LTRhODktYTI0YS0yN2NjNWNhNzNmNTcifQ.Em92UDP-KmcNd80Y-euTS2IrRkIE8qTisP3SXYkQi3c"
