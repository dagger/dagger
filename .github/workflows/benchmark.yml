name: Benchmark

on:
  # Run the workflow every day at 5AM UTC
  # That's 9PM PST, 12AM EST, 6AM CET
  schedule:
    - cron: "0 5 * * *"
  # Enable manual trigger for easy debugging
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  benchmark-go:
    name: Benchmark (Go)
    runs-on: "dagger-g3-main-4c"
    if: ${{ github.repository == 'dagger/dagger' }}
    timeout-minutes: 10
    env:
      DAGGER_CLOUD_TOKEN: "dag_dagger_sBIv6DsjNerWvTqt2bSFeigBUqWxp9bhh3ONSSgeFnw"
    steps:
      - name: dagger init (go)
        shell: bash
        run: |
          mkdir -p ${{ runner.temp }}/benchmark
          cd ${{ runner.temp }}/benchmark

          dagger init --name=benchmark --sdk=go
      
      - name: dagger functions@initial (go)
        shell: bash
        run: |
          dagger functions
        working-directory: ${{ runner.temp }}/benchmark

      - name: dagger functions@cached (go)
        shell: bash
        run: |
          dagger functions

        working-directory: ${{ runner.temp }}/benchmark

      - name: dagger functions@modified (go)
        shell: bash
        run: |
          # invalidate the cache by modifying the source files
          [ -f "main.go" ] && echo >> main.go

          dagger functions
        working-directory: ${{ runner.temp }}/benchmark

  benchmark-python:
    name: Benchmark (Python)
    runs-on: "dagger-g3-main-4c"
    if: ${{ github.repository == 'dagger/dagger' }}
    timeout-minutes: 10    
    env:
      DAGGER_CLOUD_TOKEN: "dag_dagger_sBIv6DsjNerWvTqt2bSFeigBUqWxp9bhh3ONSSgeFnw"
    steps:
      - name: dagger init (python)
        shell: bash
        run: |
          mkdir -p ${{ runner.temp }}/benchmark
          cd ${{ runner.temp }}/benchmark

          dagger init --name=benchmark --sdk=python

      - name: dagger functions@initial (python)
        shell: bash
        run: |
          dagger functions
        working-directory: ${{ runner.temp }}/benchmark

      - name: dagger functions@cached (python)
        shell: bash
        run: |
          dagger functions
        working-directory: ${{ runner.temp }}/benchmark

      - name: dagger functions@modified (python)
        shell: bash
        run: |
          # invalidate the cache by modifying the source files
          [ -f "src/main/__init__.py" ] && echo >> src/main/__init__.py

          dagger functions
        working-directory: ${{ runner.temp }}/benchmark

  benchmark-typescript:
    name: Benchmark (TypeScript::${{ matrix.package-manager }})
    runs-on: "dagger-g3-main-4c"
    if: ${{ github.repository == 'dagger/dagger' }}
    timeout-minutes: 10
    env:
      DAGGER_CLOUD_TOKEN: "dag_dagger_sBIv6DsjNerWvTqt2bSFeigBUqWxp9bhh3ONSSgeFnw"
    strategy:
      matrix:
        package-manager: [pnpm, yarn, yarnv4, npm, bun]

    steps: 
      - name: dagger init (typescript::${{ matrix.package-manager }})
        shell: bash
        run: |
          mkdir -p ${{ runner.temp }}/benchmark
          cd ${{ runner.temp }}/benchmark

          if [ "${{ matrix.package-manager }}" == "pnpm" ]; then
          cat << EOF > package.json
          {
            "type": "module",
            "dependencies": {
              "typescript": "^5.5.4",
              "@dagger.io/dagger": "./sdk"
            },
            "packageManager": "pnpm@8.15.4"
          }
          EOF
          fi

          if [ "${{ matrix.package-manager }}" == "npm" ]; then
          cat << EOF > package.json
          {
            "type": "module",
            "dependencies": {
              "typescript": "^5.5.4",
              "@dagger.io/dagger": "./sdk"
            },
            "packageManager": "npm@10.7.0"
          }
          EOF
          fi

          if [ "${{ matrix.package-manager }}" == "yarn" ]; then
          cat << EOF > package.json
          {
            "type": "module",
            "dependencies": {
              "typescript": "^5.5.4",
              "@dagger.io/dagger": "./sdk"
            },
            "packageManager": "yarn@1.22.22"
          }
          EOF
          fi

          if [ "${{ matrix.package-manager }}" == "yarnv4" ]; then
          cat << EOF > package.json
          {
            "type": "module",
            "dependencies": {
              "typescript": "^5.5.4",
              "@dagger.io/dagger": "./sdk"
            },
            "packageManager": "yarn@4.0.0"
          }
          EOF
          fi

          if [ "${{ matrix.package-manager }}" == "bun" ]; then
          cat << EOF > package.json
          {
            "type": "module",
            "dependencies": {
              "typescript": "^5.5.4",
              "@dagger.io/dagger": "./sdk"
            },
            "dagger": {
              "runtime": "bun"
            }
          }
          EOF
          fi

          dagger init --name=benchmark --sdk=typescript

      - name: dagger functions@initial (typescript::${{ matrix.package-manager }})
        shell: bash
        run: |
          dagger functions
        working-directory: ${{ runner.temp }}/benchmark

      - name: dagger functions@cached (typescript::${{ matrix.package-manager }})
        shell: bash
        run: |
          dagger functions
        working-directory: ${{ runner.temp }}/benchmark

      - name: dagger functions@modified (typescript::${{ matrix.package-manager }})
        shell: bash
        run: |
          # invalidate the cache by modifying the source files
          [ -f "src/index.ts" ] && echo >> src/index.ts

          dagger functions
        working-directory: ${{ runner.temp }}/benchmark
