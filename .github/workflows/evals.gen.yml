# This file was generated. See https://daggerverse.dev/mod/github.com/dagger/dagger/modules/gha
name: evals
"on":
    push:
        paths:
            - core/llm.go
            - core/mcp.go
            - core/env.go
            - core/llm_*.go
            - core/llm_*.md
            - core/schema/llm.go
            - core/schema/env.go
            - modules/evaluator/**
            - modules/evals/**
    workflow_dispatch: {}
jobs:
    testdev:
        if: ${{ (github.repository == 'dagger/dagger') && (github.actor != 'dependabot[bot]') }}
        runs-on:
            - ${{ github.repository == 'dagger/dagger' && 'nscloud-ubuntu-24.04-amd64-16x32' || 'ubuntu-24.04' }}
        name: testdev
        steps:
            - name: Install Dagger
              uses: dagger/dagger-for-github@v8.2.0
              with:
                version: v0.18.19
            - name: scripts/warm-engine.sh
              id: warm-engine
              run: |
                #!/bin/bash

                # Detect if a dev engine is available, if so: use that
                # We don't rely on PATH because the GHA runner messes with that
                if [[ -n "$_EXPERIMENTAL_DAGGER_CLI_BIN" ]]; then
                  export PATH="$(dirname $_EXPERIMENTAL_DAGGER_CLI_BIN):$PATH"
                  unset _EXPERIMENTAL_DAGGER_RUNNER_HOST
                fi

                which dagger
                dagger version
                dagger core version
              shell: bash
            - name: Checkout
              uses: actions/checkout@v4
            - name: exec
              id: exec
              uses: dagger/dagger-for-github@v8.2.0
              with:
                call: --allow-llm all check
                cloud-token: oidc
                module: github.com/${{ github.repository }}/modules/evals@${{ github.sha }}
                version: v0.18.19
              env:
                DOTENV: |-
                    ANTHROPIC_API_KEY=op://RelEng/ANTHROPIC/API_KEY
                    GEMINI_API_KEY=op://RelEng/GEMINI/API_KEY
                    OPENAI_API_KEY=op://RelEng/OPEN_AI/API_KEY
                OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        timeout-minutes: 20
