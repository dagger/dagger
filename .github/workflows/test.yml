name: test
on:
  push:
    branches: [main]
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
      - "sdk/nodejs/**.js"
      - ".github/workflows/test.yml"
  pull_request:
    branches: [main]
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
      - "**/go.mod"
      - "**/go.sum"
      - "sdk/nodejs/**.js"
      - ".github/workflows/test.yml"
  # Enable manual trigger for easy ad-hoc debugging
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
  workflow_dispatch:
jobs:
  go:
    name: go
    runs-on: ubuntu-22.04-16c-64g-600gb
    steps:
      - name: Set up QEMU
        run: |
          docker run --rm --privileged tonistiigi/binfmt:latest --install all
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: build
        uses: magefile/mage-action@v2
        with:
          version: latest
          args: build
      - run: cp ./bin/cloak /usr/local/bin
      - run: go test -v ./...
  go-race:
    needs: [go] # prioritize fast feedback + don't bother if tests fail
    name: go with -race
    runs-on: ubuntu-22.04-16c-64g-600gb
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - run: go install $(pwd)/cmd/cloak/
      - run: go test -v -race -timeout=1h ./...
  sdk-go:
    name: sdk / go
    runs-on: ubuntu-22.04-16c-64g-600gb
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - run: cd ./sdk/go && go test -v ./...
  sdk-nodejs:
    name: sdk / nodejs
    runs-on: ubuntu-22.04-16c-64g-600gb
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/setup-node@v3
        with:
          # ⚠️  Keep this in sync with https://github.com/dagger/dagger/blob/main/package.json#L14
          node-version: 16
      - uses: actions/checkout@v3
      - run: go install $(pwd)/cmd/cloak/
      - run: yarn install
      - run: yarn run test-sdk
