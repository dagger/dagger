#!/usr/bin/env sh

: "${BUILDX_CMD=docker buildx}"
: "${BUILDX_BUILDER=}"

: "${GITHUB_ACTIONS=}"
: "${GITHUB_REPOSITORY=}"
: "${GITHUB_RUN_ID=}"

: "${CONTEXT=}"
: "${CACHE_FROM=}"
: "${CACHE_TO=}"

dockerCmd() {
  (
    set -x
    docker "$@"
  )
}

buildxCmd() {
  (
    set -x
    BUILDX_NO_DEFAULT_LOAD=true BUILDX_BUILDER="${BUILDX_BUILDER}" ${BUILDX_CMD} "$@"
  )
}

buildAttestFlags() {
  if ${BUILDX_CMD} build --help 2>&1 | grep -- '--attest' >/dev/null; then
    prvattrs="mode=max"
    if [ "$GITHUB_ACTIONS" = "true" ]; then
      prvattrs="$prvattrs,builder-id=https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
    fi
    echo "--attest=type=sbom --attest=type=provenance,$prvattrs"
  fi
}

currentref=""
currentcontext="."
cacheFromFlags=""
cacheToFlags=""
if [ "$GITHUB_ACTIONS" = "true" ] && [ "$GITHUB_REPOSITORY" = "moby/buildkit" ]; then
  currentref="https://github.com/$GITHUB_REPOSITORY.git#$GITHUB_REF"
  if [ -n "$CACHE_FROM" ]; then
    for cfrom in $CACHE_FROM; do
      cacheFromFlags="${cacheFromFlags}--cache-from=$cfrom "
    done
  fi
  if [ -n "$CACHE_TO" ]; then
    for cto in $CACHE_TO; do
      cacheToFlags="${cacheToFlags}--cache-to=$cto "
    done
  fi
fi
if [ -n "$currentref" ]; then
  currentcontext="--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1 $currentref"
fi
if [ -n "$CONTEXT" ]; then
  currentcontext=$CONTEXT
fi
