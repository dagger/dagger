{{- /* Header template.
A static file to define BaseClient class that will be
inherited by futures objects and common types.
 */ -}}
{{ define "header" -}}
/**
 * This file was auto-generated by `client-gen`.
 * Do not make direct changes to the file.
 */
{{- if (not IsClientOnly)}}
import { Context } from "../common/context.js"
{{- else }}
import { Context, connect as _connect, connection as _connection, ConnectOpts, CallbackFct } from "@dagger.io/dagger"
{{- end }}

{{ if IsClientOnly }}
export async function connection(
  fct: () => Promise<void>,
  cfg: ConnectOpts = {},
) {
  cfg.ServeCurrentModule = true

  return await _connection(fct, cfg)
}

export async function connect(
  fct: CallbackFct,
  cfg: ConnectOpts = {},
) {
  cfg.ServeCurrentModule = true

  return await _connect(fct, cfg)
}
{{- end }}

/**
 * Declare a number as float in the Dagger API.
 */
export type float = number

class BaseClient {
  /**
   * @hidden
   */

  constructor(protected _ctx: Context = new Context()) {}
}
{{- end }}
