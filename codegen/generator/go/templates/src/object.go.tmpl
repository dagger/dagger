{{- if ne (.Name | FormatName) "Query" }}
{{ .Description | Comment }}
type {{ .Name | FormatName }} struct {
	q *querybuilder.Selection
	c graphql.Client
}
{{- end }}
{{ range $field := .Fields }}
{{- if $field.Args.HasOptionals }}
// {{ $field | FieldOptionsStructName }} contains options for {{ $.Name | FormatName }}.{{ $field.Name | FormatName }}
type {{ $field | FieldOptionsStructName }} struct {
	{{- range $arg := $field.Args }}
	{{- if $arg.TypeRef.IsOptional }}
	{{ $arg.Description | Comment }}
	{{- if and (eq $arg.Name "id") (eq $.Name "Query") }}
	{{ $arg.Name | FormatName }} {{ $arg.TypeRef | FormatOutputType }}
	{{- else }}
	{{ $arg.Name | FormatName }} {{ $arg.TypeRef | FormatInputType }}
	{{- end }}
	{{- end }}
	{{- end }}
}

{{- end }}

{{ $field.Description | Comment }}
{{- if $field.IsDeprecated }}
//
{{ $field.DeprecationReason | FormatDeprecation }}
{{- end }}
{{ $field | FieldFunction }} {
	q := r.q.Select("{{ $field.Name }}")
	{{- range $arg := $field.Args }}
	{{- if $arg.TypeRef.IsOptional }}
	// `{{ $arg.Name }}` optional argument
	for i := len(opts) - 1; i >= 0; i-- {
		if !querybuilder.IsZeroValue(opts[i].{{ $arg.Name | FormatName }}) {
			q = q.Arg("{{ $arg.Name }}", opts[i].{{ $arg.Name | FormatName }})
			break
		}
	}
	{{- else }}
	q = q.Arg("{{ $arg.Name }}", {{ $arg.Name }})
	{{- end }}
	{{- end }}
	{{ if $field.TypeRef.IsObject }}
	{{ $typeName := $field.TypeRef | FormatOutputType }}
	return &{{ $field.TypeRef | FormatOutputType }} {
		q: q,
		{{- if ne $typeName "Client" }}
		c: r.c,
		{{- end }}
	}
	{{- else if or $field.TypeRef.IsScalar $field.TypeRef.IsList }}
	var response {{ $field.TypeRef | FormatOutputType }}
	q = q.Bind(&response)
	{{- $typeName := $field.TypeRef | FormatOutputType }}
	{{- if ne $typeName "Client" }}
	return response, q.Execute(ctx, r.c)
	{{- else }}
	return response, q.Execute(ctx, r.gql)
	{{- end }}
	{{- end }}
}

{{ if eq $field.Name "id" }}
// XXX_GraphQLType is an internal function. It returns the native GraphQL type name
func (r *{{ $.Name | FormatName }}) XXX_GraphQLType() string {
	return "{{ $.Name }}"
}

// XXX_GraphQLID is an internal function. It returns the underlying type ID
func (r *{{ $.Name | FormatName }}) XXX_GraphQLID(ctx context.Context) (string, error) {
    id, err := r.ID(ctx)
    if err != nil {
        return "", err
    }
	return string(id), nil
}
{{ end }}
{{ end -}}
