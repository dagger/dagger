[
  {
    "role": "user",
    "content": "tell me the value of PATH",
    "token_usage": {
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    }
  },
  {
    "role": "assistant",
    "content": "",
    "tool_calls": [
      {
        "id": "call_evNqTAZq3h1Tkf13i8TsoScJ",
        "function": {
          "name": "load_tools",
          "arguments": {
            "tools": [
              "Container_with_exec",
              "Container_stdout"
            ]
          }
        },
        "type": "function"
      }
    ],
    "token_usage": {
      "input_tokens": 1169,
      "output_tokens": 21,
      "total_tokens": 1190
    }
  },
  {
    "role": "user",
    "content": "{\"addedTools\":[{\"name\":\"Container_with_exec\",\"description\":\"Execute a command in the container, and return a new snapshot of the container state after execution.\\n\\nReturn type: Container!\",\"schema\":{\"properties\":{\"Container\":{\"default\":\"Container#1\",\"description\":\"The Container to operate against. Default: Container#1\",\"enum\":[\"Container#1\"],\"type\":\"string\"},\"args\":{\"description\":\"Command to execute. Must be valid exec() arguments, not a shell command. Example: [\\\"go\\\", \\\"run\\\", \\\"main.go\\\"].\\n\\nTo run a shell command, execute the shell and pass the shell command as argument. Example: [\\\"sh\\\", \\\"-c\\\", \\\"ls -l | grep foo\\\"]\\n\\nDefaults to the container's default arguments (see \\\"defaultArgs\\\" and \\\"withDefaultArgs\\\").\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expand\":{\"default\":false,\"description\":\"Replace \\\"${VAR}\\\" or \\\"$VAR\\\" in the args according to the current environment variables defined in the container (e.g. \\\"/$VAR/foo\\\").\",\"type\":\"boolean\"},\"expect\":{\"default\":\"SUCCESS\",\"description\":\"Exit codes this command is allowed to exit with without error\",\"enum\":[\"SUCCESS\",\"FAILURE\",\"ANY\"],\"type\":\"string\"},\"experimentalPrivilegedNesting\":{\"default\":false,\"description\":\"Provides Dagger access to the executed command.\",\"type\":\"boolean\"},\"insecureRootCapabilities\":{\"default\":false,\"description\":\"Execute the command with all root capabilities. Like --privileged in Docker\\n\\nDANGER: this grants the command full access to the host system. Only use when 1) you trust the command being executed and 2) you specifically need this level of access.\",\"type\":\"boolean\"},\"noInit\":{\"default\":false,\"description\":\"Skip the automatic init process injected into containers by default.\\n\\nOnly use this if you specifically need the command to be pid 1 in the container. Otherwise it may result in unexpected behavior. If you're not sure, you don't need this.\",\"type\":\"boolean\"},\"redirectStderr\":{\"default\":\"\",\"description\":\"Like redirectStdout, but for standard error\",\"type\":\"string\"},\"redirectStdout\":{\"default\":\"\",\"description\":\"Redirect the command's standard output to a file in the container. Example: \\\"./stdout.txt\\\"\",\"type\":\"string\"},\"stdin\":{\"default\":\"\",\"description\":\"Content to write to the command's standard input. Example: \\\"Hello world\\\")\",\"type\":\"string\"},\"useEntrypoint\":{\"default\":false,\"description\":\"Apply the OCI entrypoint, if present, by prepending it to the args. Ignored by default.\",\"type\":\"boolean\"}},\"required\":[\"Container\",\"args\"],\"type\":\"object\"}},{\"name\":\"Container_stdout\",\"description\":\"The buffered standard output stream of the last executed command\\n\\nReturns an error if no command was executed\\n\\nReturn type: String!\",\"schema\":{\"properties\":{\"Container\":{\"default\":\"Container#1\",\"description\":\"The Container to operate against. Default: Container#1\",\"enum\":[\"Container#1\"],\"type\":\"string\"}},\"required\":[\"Container\"],\"type\":\"object\"}}]}",
    "tool_call_id": "call_evNqTAZq3h1Tkf13i8TsoScJ",
    "token_usage": {
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    }
  },
  {
    "role": "assistant",
    "content": "",
    "tool_calls": [
      {
        "id": "call_1DdSYmCj8oMCLB7oCIYsEhPA",
        "function": {
          "name": "Container_with_exec",
          "arguments": {
            "args": [
              "sh",
              "-c",
              "echo $PATH"
            ]
          }
        },
        "type": "function"
      }
    ],
    "token_usage": {
      "input_tokens": 2359,
      "output_tokens": 30,
      "total_tokens": 2389
    }
  },
  {
    "role": "user",
    "content": "{\"result\":\"Container#2\"}",
    "tool_call_id": "call_1DdSYmCj8oMCLB7oCIYsEhPA",
    "token_usage": {
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    }
  },
  {
    "role": "assistant",
    "content": "",
    "tool_calls": [
      {
        "id": "call_xkFSsPy7HBD6xbAva0gmSC8x",
        "function": {
          "name": "Container_stdout",
          "arguments": {}
        },
        "type": "function"
      }
    ],
    "token_usage": {
      "input_tokens": 2433,
      "output_tokens": 17,
      "total_tokens": 2450
    }
  },
  {
    "role": "user",
    "content": "{\"result\":\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\\n\"}",
    "tool_call_id": "call_xkFSsPy7HBD6xbAva0gmSC8x",
    "token_usage": {
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    }
  },
  {
    "role": "assistant",
    "content": "The value of PATH in this environment is:\n\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
    "token_usage": {
      "input_tokens": 2477,
      "output_tokens": 32,
      "total_tokens": 2509
    }
  },
  {
    "role": "user",
    "content": "now tell me the value of TERM",
    "token_usage": {
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    }
  },
  {
    "role": "assistant",
    "content": "",
    "tool_calls": [
      {
        "id": "call_QszE3k9XuwndcKawwy9eQXFa",
        "function": {
          "name": "Container_with_exec",
          "arguments": {
            "args": [
              "sh",
              "-c",
              "echo $TERM"
            ]
          }
        },
        "type": "function"
      }
    ],
    "token_usage": {
      "input_tokens": 2522,
      "output_tokens": 30,
      "total_tokens": 2552
    }
  },
  {
    "role": "user",
    "content": "{\"result\":\"Container#3\"}",
    "tool_call_id": "call_QszE3k9XuwndcKawwy9eQXFa",
    "token_usage": {
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    }
  },
  {
    "role": "assistant",
    "content": "",
    "tool_calls": [
      {
        "id": "call_a4lRIo8nwc9MLTEtF1IMcR3t",
        "function": {
          "name": "Container_stdout",
          "arguments": {}
        },
        "type": "function"
      }
    ],
    "token_usage": {
      "input_tokens": 2596,
      "output_tokens": 17,
      "total_tokens": 2613
    }
  },
  {
    "role": "user",
    "content": "{\"result\":\"\\n\"}",
    "tool_call_id": "call_a4lRIo8nwc9MLTEtF1IMcR3t",
    "token_usage": {
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    }
  },
  {
    "role": "assistant",
    "content": "The value of TERM in this environment is empty (it is not set by default).",
    "token_usage": {
      "input_tokens": 2620,
      "output_tokens": 19,
      "total_tokens": 2639
    }
  }
]