extend type Query {
  "Query the host environment"
  host: Host!
}

"Information about the host execution environment"
type Host {
  "The current working directory on the host"
  workdir(exclude: [String!], include: [String!]): Directory!
    @deprecated(reason: "Use `directory` with path set to '.' instead.")

  "Access a directory on the host"
  directory(path: String!, exclude: [String!], include: [String!]): Directory!

  "Access an environment variable on the host"
  envVariable(name: String!): HostVariable

  "Access a Unix socket on the host"
  unixSocket(path: String!): Socket!

  "Start a proxy service to allow connecting to host ports from containers"
  proxy([...ProxyPort!]!): Service!
}

"A port to expose on a host proxy service"
input ProxyPort {
  "Type of port to expose (TCP or UDP)"
  protocol: NetworkProtocol=TCP
  "Port number to expose"
  port: Integer!


  """
  (optional) The network protocol to forward traffic to.
  Defaults to the same protocol as the exposed port.
  """
  backendProtocol: NetworkProtocol
  
  """
  (optional) The network address to forward traffic to.
  Defaults to "localhost:$port" where $port is the value
  of the 'port' field
  """
  backendAddress: String
}

"An environment variable on the host environment"
type HostVariable {
  "The value of this variable"
  value: String!

  "A secret referencing the value of this variable"
  secret: Secret!
}
