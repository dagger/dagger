// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: id.proto

package idproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ID represents a GraphQL value of a certain type, constructed by evaluating
// its contained pipeline. In other words, it represents a
// constructor-addressed value, which may be an object, an array, or a scalar
// value.
//
// It may be binary=>base64-encoded to be used as a GraphQL ID value for
// objects. Alternatively it may be stored in a database and referred to via an
// RFC-6920 ni://sha-256;... URI.
type RawID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: doc
	TopLevelIDDigest string `protobuf:"bytes,9,opt,name=topLevelIDDigest,proto3" json:"topLevelIDDigest,omitempty"`
	// TODO: doc
	IdsByDigest map[string]*RawID_Fields `protobuf:"bytes,10,rep,name=idsByDigest,proto3" json:"idsByDigest,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RawID) Reset() {
	*x = RawID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_id_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawID) ProtoMessage() {}

func (x *RawID) ProtoReflect() protoreflect.Message {
	mi := &file_id_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawID.ProtoReflect.Descriptor instead.
func (*RawID) Descriptor() ([]byte, []int) {
	return file_id_proto_rawDescGZIP(), []int{0}
}

func (x *RawID) GetTopLevelIDDigest() string {
	if x != nil {
		return x.TopLevelIDDigest
	}
	return ""
}

func (x *RawID) GetIdsByDigest() map[string]*RawID_Fields {
	if x != nil {
		return x.IdsByDigest
	}
	return nil
}

// Module represents a self-contained logical module that can be dynamically
// loaded to evaluate an ID that uses it. The details of this task are not
// defined at the protocol layer.
type RawModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID that provides the module.
	IdDigest string `protobuf:"bytes,1,opt,name=idDigest,proto3" json:"idDigest,omitempty"`
	// The name of the module.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// A human-readable ref which may be interpreted by an external system to
	// yield the same module.
	Ref string `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *RawModule) Reset() {
	*x = RawModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_id_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawModule) ProtoMessage() {}

func (x *RawModule) ProtoReflect() protoreflect.Message {
	mi := &file_id_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawModule.ProtoReflect.Descriptor instead.
func (*RawModule) Descriptor() ([]byte, []int) {
	return file_id_proto_rawDescGZIP(), []int{1}
}

func (x *RawModule) GetIdDigest() string {
	if x != nil {
		return x.IdDigest
	}
	return ""
}

func (x *RawModule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RawModule) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

// A named value passed to a GraphQL field or contained in an input object.
type RawArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value *RawLiteral `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RawArgument) Reset() {
	*x = RawArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_id_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawArgument) ProtoMessage() {}

func (x *RawArgument) ProtoReflect() protoreflect.Message {
	mi := &file_id_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawArgument.ProtoReflect.Descriptor instead.
func (*RawArgument) Descriptor() ([]byte, []int) {
	return file_id_proto_rawDescGZIP(), []int{2}
}

func (x *RawArgument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RawArgument) GetValue() *RawLiteral {
	if x != nil {
		return x.Value
	}
	return nil
}

// A value passed to an argument or contained in a list.
type RawLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*RawLiteral_IdDigest
	//	*RawLiteral_Null
	//	*RawLiteral_Bool
	//	*RawLiteral_Enum
	//	*RawLiteral_Int
	//	*RawLiteral_Float
	//	*RawLiteral_String_
	//	*RawLiteral_List
	//	*RawLiteral_Object
	Value isRawLiteral_Value `protobuf_oneof:"value"`
}

func (x *RawLiteral) Reset() {
	*x = RawLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_id_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawLiteral) ProtoMessage() {}

func (x *RawLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_id_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawLiteral.ProtoReflect.Descriptor instead.
func (*RawLiteral) Descriptor() ([]byte, []int) {
	return file_id_proto_rawDescGZIP(), []int{3}
}

func (m *RawLiteral) GetValue() isRawLiteral_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *RawLiteral) GetIdDigest() string {
	if x, ok := x.GetValue().(*RawLiteral_IdDigest); ok {
		return x.IdDigest
	}
	return ""
}

func (x *RawLiteral) GetNull() bool {
	if x, ok := x.GetValue().(*RawLiteral_Null); ok {
		return x.Null
	}
	return false
}

func (x *RawLiteral) GetBool() bool {
	if x, ok := x.GetValue().(*RawLiteral_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *RawLiteral) GetEnum() string {
	if x, ok := x.GetValue().(*RawLiteral_Enum); ok {
		return x.Enum
	}
	return ""
}

func (x *RawLiteral) GetInt() int64 {
	if x, ok := x.GetValue().(*RawLiteral_Int); ok {
		return x.Int
	}
	return 0
}

func (x *RawLiteral) GetFloat() float64 {
	if x, ok := x.GetValue().(*RawLiteral_Float); ok {
		return x.Float
	}
	return 0
}

func (x *RawLiteral) GetString_() string {
	if x, ok := x.GetValue().(*RawLiteral_String_); ok {
		return x.String_
	}
	return ""
}

func (x *RawLiteral) GetList() *List {
	if x, ok := x.GetValue().(*RawLiteral_List); ok {
		return x.List
	}
	return nil
}

func (x *RawLiteral) GetObject() *Object {
	if x, ok := x.GetValue().(*RawLiteral_Object); ok {
		return x.Object
	}
	return nil
}

type isRawLiteral_Value interface {
	isRawLiteral_Value()
}

type RawLiteral_IdDigest struct {
	IdDigest string `protobuf:"bytes,1,opt,name=idDigest,proto3,oneof"`
}

type RawLiteral_Null struct {
	Null bool `protobuf:"varint,2,opt,name=null,proto3,oneof"`
}

type RawLiteral_Bool struct {
	Bool bool `protobuf:"varint,3,opt,name=bool,proto3,oneof"`
}

type RawLiteral_Enum struct {
	Enum string `protobuf:"bytes,4,opt,name=enum,proto3,oneof"`
}

type RawLiteral_Int struct {
	Int int64 `protobuf:"varint,5,opt,name=int,proto3,oneof"`
}

type RawLiteral_Float struct {
	Float float64 `protobuf:"fixed64,6,opt,name=float,proto3,oneof"`
}

type RawLiteral_String_ struct {
	String_ string `protobuf:"bytes,7,opt,name=string,proto3,oneof"`
}

type RawLiteral_List struct {
	List *List `protobuf:"bytes,8,opt,name=list,proto3,oneof"`
}

type RawLiteral_Object struct {
	Object *Object `protobuf:"bytes,9,opt,name=object,proto3,oneof"`
}

func (*RawLiteral_IdDigest) isRawLiteral_Value() {}

func (*RawLiteral_Null) isRawLiteral_Value() {}

func (*RawLiteral_Bool) isRawLiteral_Value() {}

func (*RawLiteral_Enum) isRawLiteral_Value() {}

func (*RawLiteral_Int) isRawLiteral_Value() {}

func (*RawLiteral_Float) isRawLiteral_Value() {}

func (*RawLiteral_String_) isRawLiteral_Value() {}

func (*RawLiteral_List) isRawLiteral_Value() {}

func (*RawLiteral_Object) isRawLiteral_Value() {}

// A list of values.
type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*RawLiteral `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_id_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_id_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_id_proto_rawDescGZIP(), []int{4}
}

func (x *List) GetValues() []*RawLiteral {
	if x != nil {
		return x.Values
	}
	return nil
}

// A series of named values.
type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*RawArgument `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_id_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_id_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_id_proto_rawDescGZIP(), []int{5}
}

func (x *Object) GetValues() []*RawArgument {
	if x != nil {
		return x.Values
	}
	return nil
}

// A GraphQL type.
type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamedType string `protobuf:"bytes,1,opt,name=namedType,proto3" json:"namedType,omitempty"`
	Elem      *Type  `protobuf:"bytes,2,opt,name=elem,proto3" json:"elem,omitempty"`
	NonNull   bool   `protobuf:"varint,3,opt,name=nonNull,proto3" json:"nonNull,omitempty"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_id_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_id_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_id_proto_rawDescGZIP(), []int{6}
}

func (x *Type) GetNamedType() string {
	if x != nil {
		return x.NamedType
	}
	return ""
}

func (x *Type) GetElem() *Type {
	if x != nil {
		return x.Elem
	}
	return nil
}

func (x *Type) GetNonNull() bool {
	if x != nil {
		return x.NonNull
	}
	return false
}

type RawID_Fields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the object that the field selection will be evaluated against.
	//
	// If not present, the root Query object is implied.
	BaseIDDigest string `protobuf:"bytes,1,opt,name=baseIDDigest,proto3" json:"baseIDDigest,omitempty"`
	// The GraphQL type of the value.
	Type *Type `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// GraphQL field name.
	Field string `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	// GraphQL field arguments, always in alphabetical order.
	Args []*RawArgument `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	// If true, this Selector is not reproducible.
	//
	// TODO: do we need to refer to session/client IDs or anything here? Or is
	// that all internal? Forcing function is whether this is used as an
	// in-memory query cache key. But the query cache might be made per-session
	// or even per-client instead anyway! What buys us the most?
	Tainted bool `protobuf:"varint,5,opt,name=tainted,proto3" json:"tainted,omitempty"`
	// If true, this Selector may be omitted from the pipeline without changing
	// the ultimate result.
	//
	// This is used to prevent meta-queries like 'pipeline' and 'withFocus' from
	// busting cache keys when desired.
	//
	// It is worth noting that we don't store meta information at this level and
	// continue to force metadata to be set via GraphQL queries. It makes IDs
	// always easy to evaluate.
	Meta bool `protobuf:"varint,6,opt,name=meta,proto3" json:"meta,omitempty"`
	// If the field returns a list, this is the index of the element to select.
	// Note that this defaults to zero, as IDs always refer to
	//
	// Here we're teetering dangerously close to full blown attribute path
	// selection, but we're intentionally limiting ourselves instead to cover
	// only the common case of returning a list of objects. The only case not
	// handled is a nested list. Don't do that; have a type instead.
	Nth int64 `protobuf:"varint,7,opt,name=nth,proto3" json:"nth,omitempty"`
	// The module that provides the implementation of the field.
	//
	// The actual usage of this ID is opaque to the protocol. In Dagger this is
	// the module ID providing the implementation of the field.
	Module *RawModule `protobuf:"bytes,8,opt,name=module,proto3" json:"module,omitempty"`
	// TODO: doc
	Digest string `protobuf:"bytes,9,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *RawID_Fields) Reset() {
	*x = RawID_Fields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_id_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawID_Fields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawID_Fields) ProtoMessage() {}

func (x *RawID_Fields) ProtoReflect() protoreflect.Message {
	mi := &file_id_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawID_Fields.ProtoReflect.Descriptor instead.
func (*RawID_Fields) Descriptor() ([]byte, []int) {
	return file_id_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RawID_Fields) GetBaseIDDigest() string {
	if x != nil {
		return x.BaseIDDigest
	}
	return ""
}

func (x *RawID_Fields) GetType() *Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *RawID_Fields) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *RawID_Fields) GetArgs() []*RawArgument {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RawID_Fields) GetTainted() bool {
	if x != nil {
		return x.Tainted
	}
	return false
}

func (x *RawID_Fields) GetMeta() bool {
	if x != nil {
		return x.Meta
	}
	return false
}

func (x *RawID_Fields) GetNth() int64 {
	if x != nil {
		return x.Nth
	}
	return 0
}

func (x *RawID_Fields) GetModule() *RawModule {
	if x != nil {
		return x.Module
	}
	return nil
}

func (x *RawID_Fields) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

var File_id_proto protoreflect.FileDescriptor

var file_id_proto_rawDesc = []byte{
	0x0a, 0x08, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x22, 0xde, 0x03, 0x0a, 0x05, 0x52, 0x61, 0x77, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x44, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x44, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x69, 0x64, 0x73, 0x42,
	0x79, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x64, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x77, 0x49, 0x44, 0x2e, 0x49, 0x64, 0x73,
	0x42, 0x79, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x69,
	0x64, 0x73, 0x42, 0x79, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x90, 0x02, 0x0a, 0x06, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x49, 0x44, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x49, 0x44, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x64, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x77, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x06, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x0a,
	0x10, 0x49, 0x64, 0x73, 0x42, 0x79, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x77, 0x49,
	0x44, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x22, 0x4b, 0x0a, 0x0b, 0x52, 0x61, 0x77, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x61,
	0x77, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x89, 0x02, 0x0a, 0x0a, 0x52, 0x61, 0x77, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x08, 0x69, 0x64, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x69, 0x64, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x04,
	0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x75,
	0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x12,
	0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x69,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x77,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x35, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x61, 0x77, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x04,
	0x65, 0x6c, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x65, 0x6c, 0x65, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x6f, 0x6e, 0x4e, 0x75, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6e, 0x6f, 0x6e, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x69, 0x64,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_id_proto_rawDescOnce sync.Once
	file_id_proto_rawDescData = file_id_proto_rawDesc
)

func file_id_proto_rawDescGZIP() []byte {
	file_id_proto_rawDescOnce.Do(func() {
		file_id_proto_rawDescData = protoimpl.X.CompressGZIP(file_id_proto_rawDescData)
	})
	return file_id_proto_rawDescData
}

var file_id_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_id_proto_goTypes = []interface{}{
	(*RawID)(nil),        // 0: dagger.RawID
	(*RawModule)(nil),    // 1: dagger.RawModule
	(*RawArgument)(nil),  // 2: dagger.RawArgument
	(*RawLiteral)(nil),   // 3: dagger.RawLiteral
	(*List)(nil),         // 4: dagger.List
	(*Object)(nil),       // 5: dagger.Object
	(*Type)(nil),         // 6: dagger.Type
	(*RawID_Fields)(nil), // 7: dagger.RawID.Fields
	nil,                  // 8: dagger.RawID.IdsByDigestEntry
}
var file_id_proto_depIdxs = []int32{
	8,  // 0: dagger.RawID.idsByDigest:type_name -> dagger.RawID.IdsByDigestEntry
	3,  // 1: dagger.RawArgument.value:type_name -> dagger.RawLiteral
	4,  // 2: dagger.RawLiteral.list:type_name -> dagger.List
	5,  // 3: dagger.RawLiteral.object:type_name -> dagger.Object
	3,  // 4: dagger.List.values:type_name -> dagger.RawLiteral
	2,  // 5: dagger.Object.values:type_name -> dagger.RawArgument
	6,  // 6: dagger.Type.elem:type_name -> dagger.Type
	6,  // 7: dagger.RawID.Fields.type:type_name -> dagger.Type
	2,  // 8: dagger.RawID.Fields.args:type_name -> dagger.RawArgument
	1,  // 9: dagger.RawID.Fields.module:type_name -> dagger.RawModule
	7,  // 10: dagger.RawID.IdsByDigestEntry.value:type_name -> dagger.RawID.Fields
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_id_proto_init() }
func file_id_proto_init() {
	if File_id_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_id_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_id_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_id_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_id_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_id_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_id_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_id_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_id_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawID_Fields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_id_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*RawLiteral_IdDigest)(nil),
		(*RawLiteral_Null)(nil),
		(*RawLiteral_Bool)(nil),
		(*RawLiteral_Enum)(nil),
		(*RawLiteral_Int)(nil),
		(*RawLiteral_Float)(nil),
		(*RawLiteral_String_)(nil),
		(*RawLiteral_List)(nil),
		(*RawLiteral_Object)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_id_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_id_proto_goTypes,
		DependencyIndexes: file_id_proto_depIdxs,
		MessageInfos:      file_id_proto_msgTypes,
	}.Build()
	File_id_proto = out.File
	file_id_proto_rawDesc = nil
	file_id_proto_goTypes = nil
	file_id_proto_depIdxs = nil
}
