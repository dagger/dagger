Expected stderr:

✔ connect X.Xs
│ ✔ starting engine X.Xs
│ ✔ connecting to engine X.Xs
│ ✔ starting session X.Xs

✘ initialize X.Xs
! input: module.withSource.initialize failed to initialize module: failed to call module "broken" to get functions: call constructor: process "go build -o /runtime ." did not complete successfully: exit code: 1
│ ✔ resolving module ref X.Xs
│ ✘ installing module X.Xs
│ ! input: module.withSource.initialize failed to initialize module: failed to call module "broken" to get functions: call constructor: process "go build -o /runtime ." did not complete successfully: exit code: 1
│ │ ✔ ModuleSource.resolveFromCaller: ModuleSource! X.Xs
│ │ ✘ .asModule: Module! X.Xs
│ │ ! process "go build -o /runtime ." did not complete successfully: exit code: 1
│ │ │ ✘ Module.withSource(
│ │ │ │ │ source: ✔ ModuleSource.resolveFromCaller: ModuleSource! X.Xs
│ │ │ │ ): Module! X.Xs
│ │ │ ! process "go build -o /runtime ." did not complete successfully: exit code: 1
│ │ │ │ ✘ Container.withExec(args: ["go", "build", "-o", "/runtime", "."]): Container! X.Xs
│ │ │ │ ┃ # dagger/broken
│ │ │ │ ┃ ./main.go:6:6: undefined: ctx
│ │ │ │ ! process "go build -o /runtime ." did not complete successfully: exit code: 1
│ │ ✘ .initialize: Module! X.Xs
│ │ ! failed to initialize module: failed to call module "broken" to get functions: call constructor: process "go build -o /runtime ." did not complete successfully: exit code: 1

Error logs:

✘ Container.withExec(args: ["go", "build", "-o", "/runtime", "."]): Container! X.Xs
# dagger/broken
./main.go:6:6: undefined: ctx
! process "go build -o /runtime ." did not complete successfully: exit code: 1

Setup tracing at https://dagger.cloud/traces/setup. To hide: export NOTHANKS=1
