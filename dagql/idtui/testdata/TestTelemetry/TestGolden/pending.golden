✔ connect X.Xs
│ ✔ starting engine X.Xs
│ ✔ connecting to engine X.Xs
│ ✔ starting session X.Xs

✔ initialize X.Xs
│ ✔ resolving module ref X.Xs
│ ✔ installing module X.Xs
│ ✔ analyzing module X.Xs

✔ prepare X.Xs

✔ viztest: Viztest! X.Xs
✘ .pending: Void X.Xs
! call function "Pending": process "/runtime" did not complete successfully: exit code: 2
│ ✘ exec /runtime X.Xs
│ ! process "/runtime" did not complete successfully: exit code: 2
│ 
│ ✔ container: Container! X.Xs
│ $ .from(address: "alpine"): Container! X.Xs CACHED
│ $ .withExec(args: ["echo", "im cached for good"]): Container! X.Xs CACHED
│ $ .withExec(args: ["echo", "im also cached for good"]): Container! X.Xs CACHED
│ ✔ .withEnvVariable(name: "NOW", value: "20XX-XX-XX XX:XX:XX.XXXX +XXXX UTC m=+X.X"): Container! X.Xs
│ ✔ .withExec(args: ["sleep", "1"]): Container! X.Xs
│ ✘ .withExec(args: ["false"]): Container! X.Xs
│ │ ✘ exec false X.Xs
│ │ ! process "false" did not complete successfully: exit code: 1
│ ○ .withExec(args: ["sleep", "1"]): Container! X.Xs

Setup tracing at https://dagger.cloud/traces/setup. To hide: export NOTHANKS=1

Error: input: viztest.pending call function "Pending": process "/runtime" did not complete successfully: exit code: 2

