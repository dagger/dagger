/**
   * A coding agent for developing new features
   */
  @func()
  async develop(
    assignment: string,
    source: Directory = dag.directory()
  ): Promise<Directory> {
    // Environment with agent inputs and outputs
    const environment = dag.env({ privileged: true })
      .withStringInput("assignment", assignment, "the assignment to complete")
      .withWorkspaceInput(
        "workspace",
        dag.workspace(source),
        "the workspace with tools to edit code")
      .withWorkspaceOutput(
        "completed",
        "the workspace with the completed assignment")

    // Detailed prompt stored in markdown file
    const promptFile = dag.currentModule().source().file("develop_prompt.md")

    // Put it all together to form the agent
    const work = dag.llm()
      .withEnv(environment)
      .withPromptFile(promptFile)

    // Get the output from the agent
    const completed = work
      .env()
      .output("completed")
      .asWorkspace()
    const completedDirectory = completed.source().withoutDirectory("node_modules")

    // Make sure the tests really pass
    await this.test(completedDirectory)

    // Return the Directory with the assignment completed
    return completedDirectory
  }
