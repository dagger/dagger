// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package main

import (
	"github.com/dagger/cloak/sdk/go/dagger"
)

// Core API
type Core struct {
	// Fetch an OCI image
	Image *dagger.Filesystem `json:"image"`
	// Fetch a git repository
	Git *dagger.Filesystem `json:"git"`
	// Fetch a client directory
	Clientdir *dagger.Filesystem `json:"clientdir"`
	// Look up a filesystem by its ID
	Filesystem *dagger.Filesystem `json:"filesystem"`
	// Look up an extension by name
	Extension *Extension `json:"extension"`
	// Look up a secret by ID
	Secret string `json:"secret"`
	// Add a secret
	AddSecret dagger.SecretID `json:"addSecret"`
}

type Deploy struct {
	URL       string  `json:"url"`
	DeployURL string  `json:"deployURL"`
	LogsURL   *string `json:"logsURL"`
}

type ExecInput struct {
	// Command to execute
	// Example: ["echo", "hello, world!"]
	Args []string `json:"args"`
	// Transient filesystem mounts
	Mounts []*MountInput `json:"mounts"`
	// Working directory
	Workdir *string `json:"workdir"`
}

type Extension struct {
	// name of the extension
	Name string `json:"name"`
	// schema of the extension
	Schema string `json:"schema"`
	// operations for this extension
	Operations string `json:"operations"`
}

type MountInput struct {
	// filesystem to mount
	Fs dagger.FSID `json:"fs"`
	// path at which the filesystem will be mounted
	Path string `json:"path"`
}

type Netlify struct {
	Deploy *Deploy `json:"deploy"`
}
