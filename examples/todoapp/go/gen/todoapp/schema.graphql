
type Deploy {
  url: String!
  deployUrl: String!
  logsUrl: String
}

""
type Todoapp {
	build(src: FSID!): Filesystem!
test(src: FSID!): Filesystem!
deploy(src: FSID!, token: SecretID!): Deploy!
}

type Query {
	""
	todoapp: Todoapp!
}
	


scalar SecretID
scalar FSID

type Package {
  name: String!
  fs: Filesystem
  schema: String!
  operations: String!
}

type Exec {
  fs: Filesystem!
  stdout(lines: Int): String
  stderr(lines: Int): String
  exitCode: Int
  mount(path: String!): Filesystem!
}

type Core {
  filesystem(id: FSID!): Filesystem!
  image(ref: String!): Filesystem!
  git(remote: String!, ref: String): Filesystem!
  clientdir(id: String!): Filesystem!
  secret(id: SecretID!): String!
}

input MountInput {
  path: String!
  fs: FSID!
}

input ExecInput {
  args: [String!]!
  mounts: [MountInput!]
  workdir: String
}

type Filesystem {
  id: FSID!
  exec(input: ExecInput!): Exec!
  dockerbuild(dockerfile: String): Filesystem!
  file(path: String!, lines: Int): String
}
