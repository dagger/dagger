# This file generated by `mix dagger.gen`. Please DO NOT EDIT.
defmodule Dagger.GitRef do
  @moduledoc "A git ref (tag, branch or commit)."
  use Dagger.QueryBuilder
  defstruct [:selection, :client]

  (
    @doc "The digest of the current value of this ref.\n\n## Required Arguments\n\n\n\n## Optional Arguments"
    def digest(%__MODULE__{} = git_ref) do
      selection = select(git_ref.selection, "digest")
      execute(selection, git_ref.client)
    end
  )

  (
    @doc "The filesystem tree at this ref.\n\n## Required Arguments\n\n\n\n## Optional Arguments\n\n* `ssh_known_hosts` - \n* `ssh_auth_socket` -"
    def tree(%__MODULE__{} = git_ref, args) do
      selection = select(git_ref.selection, "tree")

      {_opts, selection} =
        [:ssh_known_hosts, :ssh_auth_socket]
        |> Enum.reduce({args, selection}, fn arg, {args, selection} ->
          if not is_nil(args[arg]) do
            {args, arg(selection, to_string(arg), args[arg])}
          else
            {args, selection}
          end
        end)

      %Dagger.Directory{selection: selection, client: git_ref.client}
    end
  )
end
