# This file generated by `mix dagger.gen`. Please DO NOT EDIT.
defmodule Dagger.Project do
  @moduledoc "A set of scripts and/or extensions"
  use Dagger.QueryBuilder
  @type t() :: %__MODULE__{}
  defstruct [:selection, :client]

  (
    @doc "extensions in this project"
    @spec extensions(t()) :: [Dagger.Project.t()]
    def extensions(%__MODULE__{} = project) do
      selection = select(project.selection, "extensions")
      execute(selection, project.client)
    end
  )

  (
    @doc "Code files generated by the SDKs in the project"
    @spec generated_code(t()) :: Dagger.Directory.t()
    def generated_code(%__MODULE__{} = project) do
      selection = select(project.selection, "generatedCode")
      %Dagger.Directory{selection: selection, client: project.client}
    end
  )

  (
    @doc "install the project's schema"
    @spec install(t()) :: boolean()
    def install(%__MODULE__{} = project) do
      selection = select(project.selection, "install")
      execute(selection, project.client)
    end
  )

  (
    @doc "name of the project"
    @spec name(t()) :: String.t()
    def name(%__MODULE__{} = project) do
      selection = select(project.selection, "name")
      execute(selection, project.client)
    end
  )

  (
    @doc "schema provided by the project"
    @spec schema(t()) :: String.t()
    def schema(%__MODULE__{} = project) do
      selection = select(project.selection, "schema")
      execute(selection, project.client)
    end
  )

  (
    @doc "sdk used to generate code for and/or execute this project"
    @spec sdk(t()) :: String.t()
    def sdk(%__MODULE__{} = project) do
      selection = select(project.selection, "sdk")
      execute(selection, project.client)
    end
  )
end
