# This file generated by `mix dagger.gen`. Please DO NOT EDIT.
defmodule Dagger.Project do
  @moduledoc "A set of scripts and/or extensions"
  use Dagger.QueryBuilder
  defstruct [:selection, :client]

  (
    @doc "extensions in this project\n\n## Required Arguments\n\n\n\n## Optional Arguments"
    def extensions(%__MODULE__{} = project) do
      selection = select(project.selection, "extensions")
      execute(selection, project.client)
    end
  )

  (
    @doc "Code files generated by the SDKs in the project\n\n## Required Arguments\n\n\n\n## Optional Arguments"
    def generated_code(%__MODULE__{} = project) do
      selection = select(project.selection, "generatedCode")
      %Dagger.Directory{selection: selection, client: project.client}
    end
  )

  (
    @doc "install the project's schema\n\n## Required Arguments\n\n\n\n## Optional Arguments"
    def install(%__MODULE__{} = project) do
      selection = select(project.selection, "install")
      execute(selection, project.client)
    end
  )

  (
    @doc "name of the project\n\n## Required Arguments\n\n\n\n## Optional Arguments"
    def name(%__MODULE__{} = project) do
      selection = select(project.selection, "name")
      execute(selection, project.client)
    end
  )

  (
    @doc "schema provided by the project\n\n## Required Arguments\n\n\n\n## Optional Arguments"
    def schema(%__MODULE__{} = project) do
      selection = select(project.selection, "schema")
      execute(selection, project.client)
    end
  )

  (
    @doc "sdk used to generate code for and/or execute this project\n\n## Required Arguments\n\n\n\n## Optional Arguments"
    def sdk(%__MODULE__{} = project) do
      selection = select(project.selection, "sdk")
      execute(selection, project.client)
    end
  )
end
