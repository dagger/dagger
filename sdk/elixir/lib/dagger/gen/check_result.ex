# This file generated by `mix dagger.gen`. Please DO NOT EDIT.
defmodule Dagger.CheckResult do
  @moduledoc "CheckResult"
  use Dagger.QueryBuilder
  @type t() :: %__MODULE__{}
  defstruct [:selection, :client]

  (
    @doc "A unique identifier for this check result."
    @spec id(t()) :: {:ok, Dagger.CheckResultID.t()} | {:error, term()}
    def id(%__MODULE__{} = check_result) do
      selection = select(check_result.selection, "id")
      execute(selection, check_result.client)
    end
  )

  (
    @doc "Any output obtained from evaluating the check's success."
    @spec output(t()) :: {:ok, Dagger.String.t()} | {:error, term()}
    def output(%__MODULE__{} = check_result) do
      selection = select(check_result.selection, "output")
      execute(selection, check_result.client)
    end
  )

  (
    @doc "Whether the check was successful."
    @spec success(t()) :: {:ok, Dagger.Boolean.t()} | {:error, term()}
    def success(%__MODULE__{} = check_result) do
      selection = select(check_result.selection, "success")
      execute(selection, check_result.client)
    end
  )
end
