# This file generated by `dagger_codegen`. Please DO NOT EDIT.
defmodule Dagger.EnvVariable do
  @moduledoc "An environment variable name and value."

  use Dagger.Core.QueryBuilder

  @derive Dagger.ID

  defstruct [:selection, :client]

  @type t() :: %__MODULE__{}

  @doc "A unique identifier for this EnvVariable."
  @spec id(t()) :: {:ok, Dagger.EnvVariableID.t()} | {:error, term()}
  def id(%__MODULE__{} = env_variable) do
    selection =
      env_variable.selection |> select("id")

    execute(selection, env_variable.client)
  end

  @doc "The environment variable name."
  @spec name(t()) :: {:ok, String.t()} | {:error, term()}
  def name(%__MODULE__{} = env_variable) do
    selection =
      env_variable.selection |> select("name")

    execute(selection, env_variable.client)
  end

  @doc "The environment variable value."
  @spec value(t()) :: {:ok, String.t()} | {:error, term()}
  def value(%__MODULE__{} = env_variable) do
    selection =
      env_variable.selection |> select("value")

    execute(selection, env_variable.client)
  end
end
