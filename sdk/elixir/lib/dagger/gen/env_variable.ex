# This file generated by `mix dagger.gen`. Please DO NOT EDIT.
defmodule Dagger.EnvVariable do
  @moduledoc "An environment variable name and value."
  use Dagger.Core.QueryBuilder
  @type t() :: %__MODULE__{}
  defstruct [:selection, :client]

  (
    @doc "A unique identifier for this EnvVariable."
    @spec id(t()) :: {:ok, Dagger.EnvVariableID.t()} | {:error, term()}
    def id(%__MODULE__{} = env_variable) do
      selection = select(env_variable.selection, "id")
      execute(selection, env_variable.client)
    end
  )

  (
    @doc "The environment variable name."
    @spec name(t()) :: {:ok, Dagger.String.t()} | {:error, term()}
    def name(%__MODULE__{} = env_variable) do
      selection = select(env_variable.selection, "name")
      execute(selection, env_variable.client)
    end
  )

  (
    @doc "The environment variable value."
    @spec value(t()) :: {:ok, Dagger.String.t()} | {:error, term()}
    def value(%__MODULE__{} = env_variable) do
      selection = select(env_variable.selection, "value")
      execute(selection, env_variable.client)
    end
  )
end
