# This file generated by `dagger_codegen`. Please DO NOT EDIT.
defmodule Dagger.Error do
  @moduledoc "Dagger.Error"

  alias Dagger.Core.Client
  alias Dagger.Core.QueryBuilder, as: QB

  @derive Dagger.ID

  defstruct [:query_builder, :client]

  @type t() :: %__MODULE__{}

  @doc "A unique identifier for this Error."
  @spec id(t()) :: {:ok, Dagger.ErrorID.t()} | {:error, term()}
  def id(%__MODULE__{} = error) do
    query_builder =
      error.query_builder |> QB.select("id")

    Client.execute(error.client, query_builder)
  end

  @doc "A description of the error."
  @spec message(t()) :: {:ok, String.t()} | {:error, term()}
  def message(%__MODULE__{} = error) do
    query_builder =
      error.query_builder |> QB.select("message")

    Client.execute(error.client, query_builder)
  end
end
