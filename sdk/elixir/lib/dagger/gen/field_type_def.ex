# This file generated by `dagger_codegen`. Please DO NOT EDIT.
defmodule Dagger.FieldTypeDef do
  @moduledoc """
  A definition of a field on a custom object defined in a Module.

  A field on an object has a static value, as opposed to a function on an object whose value is computed by invoking code (and can accept arguments).
  """

  alias Dagger.Core.Client
  alias Dagger.Core.QueryBuilder, as: QB

  @derive Dagger.ID

  defstruct [:query_builder, :client]

  @type t() :: %__MODULE__{}

  @doc "A doc string for the field, if any."
  @spec description(t()) :: {:ok, String.t()} | {:error, term()}
  def description(%__MODULE__{} = field_type_def) do
    query_builder =
      field_type_def.query_builder |> QB.select("description")

    Client.execute(field_type_def.client, query_builder)
  end

  @doc "A unique identifier for this FieldTypeDef."
  @spec id(t()) :: {:ok, Dagger.FieldTypeDefID.t()} | {:error, term()}
  def id(%__MODULE__{} = field_type_def) do
    query_builder =
      field_type_def.query_builder |> QB.select("id")

    Client.execute(field_type_def.client, query_builder)
  end

  @doc "The name of the field in lowerCamelCase format."
  @spec name(t()) :: {:ok, String.t()} | {:error, term()}
  def name(%__MODULE__{} = field_type_def) do
    query_builder =
      field_type_def.query_builder |> QB.select("name")

    Client.execute(field_type_def.client, query_builder)
  end

  @doc "The location of this field declaration."
  @spec source_map(t()) :: Dagger.SourceMap.t()
  def source_map(%__MODULE__{} = field_type_def) do
    query_builder =
      field_type_def.query_builder |> QB.select("sourceMap")

    %Dagger.SourceMap{
      query_builder: query_builder,
      client: field_type_def.client
    }
  end

  @doc "The type of the field."
  @spec type_def(t()) :: Dagger.TypeDef.t()
  def type_def(%__MODULE__{} = field_type_def) do
    query_builder =
      field_type_def.query_builder |> QB.select("typeDef")

    %Dagger.TypeDef{
      query_builder: query_builder,
      client: field_type_def.client
    }
  end
end
