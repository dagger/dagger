# This file generated by `dagger_codegen`. Please DO NOT EDIT.
defmodule Dagger.Socket do
  @moduledoc "A Unix or TCP/IP socket that can be mounted into a container."

  alias Dagger.Core.Client
  alias Dagger.Core.QueryBuilder, as: QB

  @derive Dagger.ID

  defstruct [:query_builder, :client]

  @type t() :: %__MODULE__{}

  @doc "A unique identifier for this Socket."
  @spec id(t()) :: {:ok, Dagger.SocketID.t()} | {:error, term()}
  def id(%__MODULE__{} = socket) do
    query_builder =
      socket.query_builder |> QB.select("id")

    Client.execute(socket.client, query_builder)
  end
end
