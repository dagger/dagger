# This file generated by `dagger_codegen`. Please DO NOT EDIT.
defmodule Dagger.Socket do
  @moduledoc "A Unix or TCP/IP socket that can be mounted into a container."

  use Dagger.Core.QueryBuilder

  @derive Dagger.ID

  defstruct [:selection, :client]

  @type t() :: %__MODULE__{}

  @doc "A unique identifier for this Socket."
  @spec id(t()) :: {:ok, Dagger.SocketID.t()} | {:error, term()}
  def id(%__MODULE__{} = socket) do
    selection =
      socket.selection |> select("id")

    execute(selection, socket.client)
  end
end
