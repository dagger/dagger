# This file generated by `dagger_codegen`. Please DO NOT EDIT.
defmodule Dagger.SourceMap do
  @moduledoc "Source location information."

  alias Dagger.Core.Client
  alias Dagger.Core.QueryBuilder, as: QB

  @derive Dagger.ID

  defstruct [:query_builder, :client]

  @type t() :: %__MODULE__{}

  @doc "The column number within the line."
  @spec column(t()) :: {:ok, integer()} | {:error, term()}
  def column(%__MODULE__{} = source_map) do
    query_builder =
      source_map.query_builder |> QB.select("column")

    Client.execute(source_map.client, query_builder)
  end

  @doc "The filename from the module source."
  @spec filename(t()) :: {:ok, String.t()} | {:error, term()}
  def filename(%__MODULE__{} = source_map) do
    query_builder =
      source_map.query_builder |> QB.select("filename")

    Client.execute(source_map.client, query_builder)
  end

  @doc "A unique identifier for this SourceMap."
  @spec id(t()) :: {:ok, Dagger.SourceMapID.t()} | {:error, term()}
  def id(%__MODULE__{} = source_map) do
    query_builder =
      source_map.query_builder |> QB.select("id")

    Client.execute(source_map.client, query_builder)
  end

  @doc "The line number within the filename."
  @spec line(t()) :: {:ok, integer()} | {:error, term()}
  def line(%__MODULE__{} = source_map) do
    query_builder =
      source_map.query_builder |> QB.select("line")

    Client.execute(source_map.client, query_builder)
  end

  @doc "The module dependency this was declared in."
  @spec module(t()) :: {:ok, String.t()} | {:error, term()}
  def module(%__MODULE__{} = source_map) do
    query_builder =
      source_map.query_builder |> QB.select("module")

    Client.execute(source_map.client, query_builder)
  end
end
