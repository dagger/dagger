{
  "__schema": {
    "queryType": {
      "name": "Query"
    },
    "types": [
      {
        "kind": "SCALAR",
        "name": "Boolean",
        "description": "The `Boolean` scalar type represents `true` or `false`.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BuildArg",
        "description": "Key value object that represents a build argument.",
        "inputFields": [
          {
            "name": "name",
            "description": "The build argument name.",
            "defaultValue": null,
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "directives": []
          },
          {
            "name": "value",
            "description": "The build argument value.",
            "defaultValue": null,
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "ENUM",
        "name": "CacheSharingMode",
        "description": "Sharing mode of the cache volume.",
        "enumValues": [
          {
            "name": "SHARED",
            "description": "Shares the cache volume amongst many build pipelines",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "PRIVATE",
            "description": "Keeps a cache volume for a single build pipeline",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "LOCKED",
            "description": "Shares the cache volume amongst many build pipelines, but will serialize the writes",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "CacheVolume",
        "description": "A directory whose contents persist across runs.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this CacheVolume.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "CacheVolumeID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "CacheVolumeID",
        "description": "The `CacheVolumeID` scalar type represents an identifier for an object of type CacheVolume.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Container",
        "description": "An OCI-compatible container, also known as a Docker container.",
        "fields": [
          {
            "name": "asService",
            "description": "Turn the container into a Service.\n\nBe sure to set any exposed ports before this conversion.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Service"
              }
            },
            "args": [
              {
                "name": "args",
                "description": "Command to run instead of the container's default command (e.g., [\"go\", \"run\", \"main.go\"]).\n\nIf empty, the container's default command is used.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "useEntrypoint",
                "description": "If the container has an entrypoint, prepend it to the args.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "experimentalPrivilegedNesting",
                "description": "Provides Dagger access to the executed command.\n\nDo not use this option unless you trust the command being executed; the command being executed WILL BE GRANTED FULL ACCESS TO YOUR HOST FILESYSTEM.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "insecureRootCapabilities",
                "description": "Execute the command with all root capabilities. This is similar to running a command with \"sudo\" or executing \"docker run\" with the \"--privileged\" flag. Containerization does not provide any security guarantees when using this option. It should only be used when absolutely necessary and only with trusted commands.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the args according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "noInit",
                "description": "If set, skip the automatic init process injected into containers by default.\n\nThis should only be used if the user requires that their exec process be the pid 1 process in the container. Otherwise it may result in unexpected behavior.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asTarball",
            "description": "Returns a File representing the container serialized to a tarball.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "platformVariants",
                "description": "Identifiers for other platform specific containers.\n\nUsed for multi-platform images.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ContainerID"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "forcedCompression",
                "description": "Force each layer of the image to use the specified compression algorithm.\n\nIf this is unset, then if a layer already has a compressed blob in the engine's cache, that will be used (this can result in a mix of compression algorithms for different layers). If this is unset and a layer has no compressed blob in the engine's cache, then it will be compressed using Gzip.",
                "defaultValue": null,
                "type": {
                  "kind": "ENUM",
                  "name": "ImageLayerCompression"
                },
                "directives": []
              },
              {
                "name": "mediaTypes",
                "description": "Use the specified media types for the image's layers.\n\nDefaults to OCI, which is largely compatible with most recent container runtimes, but Docker may be needed for older runtimes without OCI support.",
                "defaultValue": "OCIMediaTypes",
                "type": {
                  "kind": "ENUM",
                  "name": "ImageMediaTypes"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "build",
            "description": "Initializes this container from a Dockerfile build.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "context",
                "description": "Directory context used by the Dockerfile.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              },
              {
                "name": "dockerfile",
                "description": "Path to the Dockerfile to use.",
                "defaultValue": "\"Dockerfile\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "target",
                "description": "Target build stage to build.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "buildArgs",
                "description": "Additional build arguments.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "BuildArg"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "secrets",
                "description": "Secrets to pass to the build.\n\nThey will be mounted at /run/secrets/[secret-name] in the build container\n\nThey can be accessed in the Dockerfile using the \"secret\" mount type and mount path /run/secrets/[secret-name], e.g. RUN --mount=type=secret,id=my-secret curl [http://example.com?token=$(cat /run/secrets/my-secret)](http://example.com?token=$(cat /run/secrets/my-secret))",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "SecretID"
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "defaultArgs",
            "description": "Retrieves default arguments for future commands.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "directory",
            "description": "Retrieves a directory at the given path.\n\nMounts are included.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "The path of the directory to retrieve (e.g., \"./src\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "entrypoint",
            "description": "Retrieves entrypoint to be prepended to the arguments of all commands.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "envVariable",
            "description": "Retrieves the value of the specified environment variable.",
            "type": {
              "kind": "SCALAR",
              "name": "String"
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the environment variable to retrieve (e.g., \"PATH\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "envVariables",
            "description": "Retrieves the list of environment variables passed to commands.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EnvVariable"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "exitCode",
            "description": "The exit code of the last executed command.\n\nReturns an error if no command was set.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "experimentalWithAllGPUs",
            "description": "EXPERIMENTAL API! Subject to change/removal at any time.\n\nConfigures all available GPUs on the host to be accessible to this container.\n\nThis currently works for Nvidia devices only.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "experimentalWithGPU",
            "description": "EXPERIMENTAL API! Subject to change/removal at any time.\n\nConfigures the provided list of devices to be accessible to this container.\n\nThis currently works for Nvidia devices only.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "devices",
                "description": "List of devices to be accessible to this container.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "export",
            "description": "Writes the container as an OCI tarball to the destination file path on the host.\n\nIt can also export platform variants.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Host's destination path (e.g., \"./tarball\").\n\nPath can be relative to the engine's workdir or absolute.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "platformVariants",
                "description": "Identifiers for other platform specific containers.\n\nUsed for multi-platform image.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ContainerID"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "forcedCompression",
                "description": "Force each layer of the exported image to use the specified compression algorithm.\n\nIf this is unset, then if a layer already has a compressed blob in the engine's cache, that will be used (this can result in a mix of compression algorithms for different layers). If this is unset and a layer has no compressed blob in the engine's cache, then it will be compressed using Gzip.",
                "defaultValue": null,
                "type": {
                  "kind": "ENUM",
                  "name": "ImageLayerCompression"
                },
                "directives": []
              },
              {
                "name": "mediaTypes",
                "description": "Use the specified media types for the exported image's layers.\n\nDefaults to OCI, which is largely compatible with most recent container runtimes, but Docker may be needed for older runtimes without OCI support.",
                "defaultValue": "OCIMediaTypes",
                "type": {
                  "kind": "ENUM",
                  "name": "ImageMediaTypes"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Writes to the local host."
                  }
                ]
              }
            ]
          },
          {
            "name": "exposedPorts",
            "description": "Retrieves the list of exposed ports.\n\nThis includes ports already exposed by the image, even if not explicitly added with dagger.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Port"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "file",
            "description": "Retrieves a file at the given path.\n\nMounts are included.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "The path of the file to retrieve (e.g., \"./README.md\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo.txt\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "from",
            "description": "Initializes this container from a pulled base image.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "address",
                "description": "Image's address from its registry.\n\nFormatted as [host]/[user]/[repo]:[tag] (e.g., \"docker.io/dagger/dagger:main\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this Container.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ContainerID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "imageRef",
            "description": "The unique image reference which can only be retrieved immediately after the 'Container.From' call.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "import",
            "description": "Reads the container from an OCI tarball.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "source",
                "description": "File to read the container from.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FileID"
                  }
                },
                "directives": []
              },
              {
                "name": "tag",
                "description": "Identifies the tag to import from the archive, if the archive bundles multiple tags.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "label",
            "description": "Retrieves the value of the specified label.",
            "type": {
              "kind": "SCALAR",
              "name": "String"
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the label (e.g., \"org.opencontainers.artifact.created\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "labels",
            "description": "Retrieves the list of labels passed to container.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Label"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "mounts",
            "description": "Retrieves the list of paths where a directory is mounted.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "platform",
            "description": "The platform this container executes and publishes as.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Platform"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "publish",
            "description": "Publishes this container as a new image to the specified address.\n\nPublish returns a fully qualified ref.\n\nIt can also publish platform variants.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [
              {
                "name": "address",
                "description": "Registry's address to publish the image to.\n\nFormatted as [host]/[user]/[repo]:[tag] (e.g. \"docker.io/dagger/dagger:main\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "platformVariants",
                "description": "Identifiers for other platform specific containers.\n\nUsed for multi-platform image.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ContainerID"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "forcedCompression",
                "description": "Force each layer of the published image to use the specified compression algorithm.\n\nIf this is unset, then if a layer already has a compressed blob in the engine's cache, that will be used (this can result in a mix of compression algorithms for different layers). If this is unset and a layer has no compressed blob in the engine's cache, then it will be compressed using Gzip.",
                "defaultValue": null,
                "type": {
                  "kind": "ENUM",
                  "name": "ImageLayerCompression"
                },
                "directives": []
              },
              {
                "name": "mediaTypes",
                "description": "Use the specified media types for the published image's layers.\n\nDefaults to OCI, which is largely compatible with most recent registries, but Docker may be needed for older registries without OCI support.",
                "defaultValue": "OCIMediaTypes",
                "type": {
                  "kind": "ENUM",
                  "name": "ImageMediaTypes"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Writes to the specified Docker registry."
                  }
                ]
              }
            ]
          },
          {
            "name": "rootfs",
            "description": "Retrieves this container's root filesystem. Mounts are not included.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "stderr",
            "description": "The error stream of the last executed command.\n\nReturns an error if no command was set.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "stdout",
            "description": "The output stream of the last executed command.\n\nReturns an error if no command was set.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sync",
            "description": "Forces evaluation of the pipeline in the engine.\n\nIt doesn't run the default command if no exec has been set.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ContainerID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "terminal",
            "description": "Opens an interactive terminal for this container using its configured default terminal command if not overridden by args (or sh as a fallback default).",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "cmd",
                "description": "If set, override the container's default terminal command and invoke these command arguments instead.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "experimentalPrivilegedNesting",
                "description": "Provides Dagger access to the executed command.\n\nDo not use this option unless you trust the command being executed; the command being executed WILL BE GRANTED FULL ACCESS TO YOUR HOST FILESYSTEM.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "insecureRootCapabilities",
                "description": "Execute the command with all root capabilities. This is similar to running a command with \"sudo\" or executing \"docker run\" with the \"--privileged\" flag. Containerization does not provide any security guarantees when using this option. It should only be used when absolutely necessary and only with trusted commands.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Nondeterministic."
                  }
                ]
              }
            ]
          },
          {
            "name": "up",
            "description": "Starts a Service and creates a tunnel that forwards traffic from the caller's network to that service.\n\nBe sure to set any exposed ports before calling this api.",
            "type": {
              "kind": "SCALAR",
              "name": "Void"
            },
            "args": [
              {
                "name": "ports",
                "description": "List of frontend/backend port mappings to forward.\n\nFrontend is the port accepting traffic on the host, backend is the service port.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PortForward"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "random",
                "description": "Bind each tunnel port to a random port on the host.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "user",
            "description": "Retrieves the user to be set for all commands.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withAnnotation",
            "description": "Retrieves this container plus the given OCI anotation.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the annotation.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "value",
                "description": "The value of the annotation.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withDefaultArgs",
            "description": "Configures default arguments for future commands.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "args",
                "description": "Arguments to prepend to future executions (e.g., [\"-v\", \"--no-cache\"]).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withDefaultTerminalCmd",
            "description": "Set the default command to invoke for the container's terminal API.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "args",
                "description": "The args of the command.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "experimentalPrivilegedNesting",
                "description": "Provides Dagger access to the executed command.\n\nDo not use this option unless you trust the command being executed; the command being executed WILL BE GRANTED FULL ACCESS TO YOUR HOST FILESYSTEM.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "insecureRootCapabilities",
                "description": "Execute the command with all root capabilities. This is similar to running a command with \"sudo\" or executing \"docker run\" with the \"--privileged\" flag. Containerization does not provide any security guarantees when using this option. It should only be used when absolutely necessary and only with trusted commands.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withDirectory",
            "description": "Retrieves this container plus a directory written at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the written directory (e.g., \"/tmp/directory\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "directory",
                "description": "Identifier of the directory to write",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              },
              {
                "name": "exclude",
                "description": "Patterns to exclude in the written directory (e.g. [\"node_modules/**\", \".gitignore\", \".git/\"]).",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "include",
                "description": "Patterns to include in the written directory (e.g. [\"*.go\", \"go.mod\", \"go.sum\"]).",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user:group to set for the directory and its contents.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withEntrypoint",
            "description": "Retrieves this container but with a different command entrypoint.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "args",
                "description": "Entrypoint to use for future executions (e.g., [\"go\", \"run\"]).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "keepDefaultArgs",
                "description": "Don't remove the default arguments when setting the entrypoint.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withEnvVariable",
            "description": "Retrieves this container plus the given environment variable.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the environment variable (e.g., \"HOST\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "value",
                "description": "The value of the environment variable. (e.g., \"localhost\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value according to the current environment variables defined in the container (e.g. \"/opt/bin:$PATH\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withExec",
            "description": "Retrieves this container after executing the specified command inside it.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "args",
                "description": "Command to run instead of the container's default command (e.g., [\"go\", \"run\", \"main.go\"]).\n\nIf empty, the container's default command is used.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "useEntrypoint",
                "description": "If the container has an entrypoint, prepend it to the args.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "stdin",
                "description": "Content to write to the command's standard input before closing (e.g., \"Hello world\").",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "redirectStdout",
                "description": "Redirect the command's standard output to a file in the container (e.g., \"/tmp/stdout\").",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "redirectStderr",
                "description": "Redirect the command's standard error to a file in the container (e.g., \"/tmp/stderr\").",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expect",
                "description": "Exit codes this command is allowed to exit with without error",
                "defaultValue": "SUCCESS",
                "type": {
                  "kind": "ENUM",
                  "name": "ReturnType"
                },
                "directives": []
              },
              {
                "name": "experimentalPrivilegedNesting",
                "description": "Provides Dagger access to the executed command.\n\nDo not use this option unless you trust the command being executed; the command being executed WILL BE GRANTED FULL ACCESS TO YOUR HOST FILESYSTEM.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "insecureRootCapabilities",
                "description": "Execute the command with all root capabilities. This is similar to running a command with \"sudo\" or executing \"docker run\" with the \"--privileged\" flag. Containerization does not provide any security guarantees when using this option. It should only be used when absolutely necessary and only with trusted commands.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the args according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "noInit",
                "description": "If set, skip the automatic init process injected into containers by default.\n\nThis should only be used if the user requires that their exec process be the pid 1 process in the container. Otherwise it may result in unexpected behavior.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withExposedPort",
            "description": "Expose a network port.\n\nExposed ports serve two purposes:\n\n- For health checks and introspection, when running services\n\n- For setting the EXPOSE OCI field when publishing the container",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "port",
                "description": "Port number to expose",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int"
                  }
                },
                "directives": []
              },
              {
                "name": "protocol",
                "description": "Transport layer network protocol",
                "defaultValue": "TCP",
                "type": {
                  "kind": "ENUM",
                  "name": "NetworkProtocol"
                },
                "directives": []
              },
              {
                "name": "description",
                "description": "Optional port description",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "experimentalSkipHealthcheck",
                "description": "Skip the health check when run as a service.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withFile",
            "description": "Retrieves this container plus the contents of the given file copied to the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the copied file (e.g., \"/tmp/file.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "source",
                "description": "Identifier of the file to copy.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FileID"
                  }
                },
                "directives": []
              },
              {
                "name": "permissions",
                "description": "Permission given to the copied file (e.g., 0600).",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user:group to set for the file.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo.txt\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withFiles",
            "description": "Retrieves this container plus the contents of the given files copied to the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location where copied files should be placed (e.g., \"/src\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "sources",
                "description": "Identifiers of the files to copy.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "FileID"
                      }
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "permissions",
                "description": "Permission given to the copied files (e.g., 0600).",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user:group to set for the files.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo.txt\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withLabel",
            "description": "Retrieves this container plus the given label.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the label (e.g., \"org.opencontainers.artifact.created\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "value",
                "description": "The value of the label (e.g., \"2023-01-01T00:00:00Z\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withMountedCache",
            "description": "Retrieves this container plus a cache volume mounted at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the cache directory (e.g., \"/root/.npm\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "cache",
                "description": "Identifier of the cache volume to mount.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "CacheVolumeID"
                  }
                },
                "directives": []
              },
              {
                "name": "source",
                "description": "Identifier of the directory to use as the cache volume's root.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "DirectoryID"
                },
                "directives": []
              },
              {
                "name": "sharing",
                "description": "Sharing mode of the cache volume.",
                "defaultValue": "SHARED",
                "type": {
                  "kind": "ENUM",
                  "name": "CacheSharingMode"
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user:group to set for the mounted cache directory.\n\nNote that this changes the ownership of the specified mount along with the initial filesystem provided by source (if any). It does not have any effect if/when the cache has already been created.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withMountedDirectory",
            "description": "Retrieves this container plus a directory mounted at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the mounted directory (e.g., \"/mnt/directory\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "source",
                "description": "Identifier of the mounted directory.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user:group to set for the mounted directory and its contents.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withMountedFile",
            "description": "Retrieves this container plus a file mounted at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the mounted file (e.g., \"/tmp/file.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "source",
                "description": "Identifier of the mounted file.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FileID"
                  }
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user or user:group to set for the mounted file.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo.txt\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withMountedSecret",
            "description": "Retrieves this container plus a secret mounted into a file at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the secret file (e.g., \"/tmp/secret.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "source",
                "description": "Identifier of the secret to mount.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SecretID"
                  }
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user:group to set for the mounted secret.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "mode",
                "description": "Permission given to the mounted secret (e.g., 0600).\n\nThis option requires an owner to be set to be active.",
                "defaultValue": "256",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withMountedTemp",
            "description": "Retrieves this container plus a temporary directory mounted at the given path. Any writes will be ephemeral to a single withExec call; they will not be persisted to subsequent withExecs.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the temporary directory (e.g., \"/tmp/temp_dir\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "size",
                "description": "Size of the temporary directory in bytes.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withNewFile",
            "description": "Retrieves this container plus a new file written at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the written file (e.g., \"/tmp/file.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "contents",
                "description": "Content of the file to write (e.g., \"Hello world!\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "permissions",
                "description": "Permission given to the written file (e.g., 0600).",
                "defaultValue": "420",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user:group to set for the file.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo.txt\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withRegistryAuth",
            "description": "Retrieves this container with a registry authentication for a given address.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "address",
                "description": "Registry's address to bind the authentication to.\n\nFormatted as [host]/[user]/[repo]:[tag] (e.g. docker.io/dagger/dagger:main).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "username",
                "description": "The username of the registry's account (e.g., \"Dagger\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "secret",
                "description": "The API key, password or token to authenticate to this registry.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SecretID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withRootfs",
            "description": "Retrieves the container with the given directory mounted to /.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "directory",
                "description": "Directory to mount.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withSecretVariable",
            "description": "Retrieves this container plus an env variable containing the given secret.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the secret variable (e.g., \"API_SECRET\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "secret",
                "description": "The identifier of the secret value.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SecretID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withServiceBinding",
            "description": "Establish a runtime dependency on a service.\n\nThe service will be started automatically when needed and detached when it is no longer needed, executing the default command if none is set.\n\nThe service will be reachable from the container via the provided hostname alias.\n\nThe service dependency will also convey to any files or directories produced by the container.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "alias",
                "description": "A name that can be used to reach the service from the container",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "service",
                "description": "Identifier of the service container",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ServiceID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withUnixSocket",
            "description": "Retrieves this container plus a socket forwarded to the given Unix socket path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the forwarded Unix socket (e.g., \"/tmp/socket\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "source",
                "description": "Identifier of the socket to forward.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SocketID"
                  }
                },
                "directives": []
              },
              {
                "name": "owner",
                "description": "A user:group to set for the mounted socket.\n\nThe user and group can either be an ID (1000:1000) or a name (foo:bar).\n\nIf the group is omitted, it defaults to the same as the user.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withUser",
            "description": "Retrieves this container with a different command user.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The user to set (e.g., \"root\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withWorkdir",
            "description": "Retrieves this container with a different working directory.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "The path to set as the working directory (e.g., \"/app\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutAnnotation",
            "description": "Retrieves this container minus the given OCI annotation.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the annotation.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutDefaultArgs",
            "description": "Retrieves this container with unset default arguments for future commands.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutDirectory",
            "description": "Retrieves this container with the directory at the given path removed.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the directory to remove (e.g., \".github/\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutEntrypoint",
            "description": "Retrieves this container with an unset command entrypoint.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "keepDefaultArgs",
                "description": "Don't remove the default arguments when unsetting the entrypoint.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutEnvVariable",
            "description": "Retrieves this container minus the given environment variable.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the environment variable (e.g., \"HOST\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutExposedPort",
            "description": "Unexpose a previously exposed port.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "port",
                "description": "Port number to unexpose",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int"
                  }
                },
                "directives": []
              },
              {
                "name": "protocol",
                "description": "Port protocol to unexpose",
                "defaultValue": "TCP",
                "type": {
                  "kind": "ENUM",
                  "name": "NetworkProtocol"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutFile",
            "description": "Retrieves this container with the file at the given path removed.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the file to remove (e.g., \"/file.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo.txt\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutFiles",
            "description": "Retrieves this container with the files at the given paths removed.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "paths",
                "description": "Location of the files to remove (e.g., [\"/file.txt\"]).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of paths according to the current environment variables defined in the container (e.g. \"/$VAR/foo.txt\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutLabel",
            "description": "Retrieves this container minus the given environment label.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the label to remove (e.g., \"org.opencontainers.artifact.created\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutMount",
            "description": "Retrieves this container after unmounting everything at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the cache directory (e.g., \"/root/.npm\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutRegistryAuth",
            "description": "Retrieves this container without the registry authentication of a given address.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "address",
                "description": "Registry's address to remove the authentication from.\n\nFormatted as [host]/[user]/[repo]:[tag] (e.g. docker.io/dagger/dagger:main).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutSecretVariable",
            "description": "Retrieves this container minus the given environment variable containing the secret.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the environment variable (e.g., \"HOST\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutUnixSocket",
            "description": "Retrieves this container with a previously added Unix socket removed.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the socket to remove (e.g., \"/tmp/socket\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "expand",
                "description": "Replace \"${VAR}\" or \"$VAR\" in the value of path according to the current environment variables defined in the container (e.g. \"/$VAR/foo\").",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutUser",
            "description": "Retrieves this container with an unset command user.\n\nShould default to root.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutWorkdir",
            "description": "Retrieves this container with an unset working directory.\n\nShould default to \"/\".",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "workdir",
            "description": "Retrieves the working directory for all commands.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ContainerID",
        "description": "The `ContainerID` scalar type represents an identifier for an object of type Container.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "CurrentModule",
        "description": "Reflective module API provided to functions at runtime.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this CurrentModule.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "CurrentModuleID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the module being executed in",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "source",
            "description": "The directory containing the module's source code loaded into the engine (plus any generated code that may have been created).",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "workdir",
            "description": "Load a directory from the module's scratch working directory, including any changes that may have been made to it during module function execution.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the directory to access (e.g., \".\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "exclude",
                "description": "Exclude artifacts that match the given pattern (e.g., [\"node_modules/\", \".git*\"]).",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "include",
                "description": "Include only artifacts that match the given pattern (e.g., [\"app/\", \"package.*\"]).",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Loads live caller-specific data from their filesystem."
                  }
                ]
              }
            ]
          },
          {
            "name": "workdirFile",
            "description": "Load a file from the module's scratch working directory, including any changes that may have been made to it during module function execution.Load a file from the module's scratch working directory, including any changes that may have been made to it during module function execution.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the file to retrieve (e.g., \"README.md\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Loads live caller-specific data from their filesystem."
                  }
                ]
              }
            ]
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "CurrentModuleID",
        "description": "The `CurrentModuleID` scalar type represents an identifier for an object of type CurrentModule.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Directory",
        "description": "A directory.",
        "fields": [
          {
            "name": "asModule",
            "description": "Load the directory as a Dagger module",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [
              {
                "name": "sourceRootPath",
                "description": "An optional subpath of the directory which contains the module's configuration file.\n\nThis is needed when the module code is in a subdirectory but requires parent directories to be loaded in order to execute. For example, the module source code may need a go.mod, project.toml, package.json, etc. file from a parent directory.\n\nIf not set, the module source code is loaded from the root of the directory.",
                "defaultValue": "\".\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "engineVersion",
                "description": "The engine version to upgrade to.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "diff",
            "description": "Gets the difference between this directory and an another directory.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "other",
                "description": "Identifier of the directory to compare.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "digest",
            "description": "Return the directory's digest. The format of the digest is not guaranteed to be stable between releases of Dagger. It is guaranteed to be stable between invocations of the same Dagger engine.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "directory",
            "description": "Retrieves a directory at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the directory to retrieve (e.g., \"/src\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "dockerBuild",
            "description": "Builds a new Docker container from this directory.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "platform",
                "description": "The platform to build.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Platform"
                },
                "directives": []
              },
              {
                "name": "dockerfile",
                "description": "Path to the Dockerfile to use (e.g., \"frontend.Dockerfile\").",
                "defaultValue": "\"Dockerfile\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "target",
                "description": "Target build stage to build.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "buildArgs",
                "description": "Build arguments to use in the build.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "BuildArg"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "secrets",
                "description": "Secrets to pass to the build.\n\nThey will be mounted at /run/secrets/[secret-name].",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "SecretID"
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "entries",
            "description": "Returns a list of files and directories at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the directory to look at (e.g., \"/src\").",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "export",
            "description": "Writes the contents of the directory to a path on the host.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the copied directory (e.g., \"logs/\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "wipe",
                "description": "If true, then the host directory will be wiped clean before exporting so that it exactly matches the directory being exported; this means it will delete any files on the host that aren't in the exported dir. If false (the default), the contents of the directory will be merged with any existing contents of the host directory, leaving any existing files on the host that aren't in the exported directory alone.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Writes to the local host."
                  }
                ]
              }
            ]
          },
          {
            "name": "file",
            "description": "Retrieves a file at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the file to retrieve (e.g., \"README.md\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "glob",
            "description": "Returns a list of files and directories that matche the given pattern.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [
              {
                "name": "pattern",
                "description": "Pattern to match (e.g., \"*.md\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this Directory.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "DirectoryID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sync",
            "description": "Force evaluation in the engine.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "DirectoryID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "terminal",
            "description": "Opens an interactive terminal in new container with this directory mounted inside.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "cmd",
                "description": "If set, override the container's default terminal command and invoke these command arguments instead.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "experimentalPrivilegedNesting",
                "description": "Provides Dagger access to the executed command.\n\nDo not use this option unless you trust the command being executed; the command being executed WILL BE GRANTED FULL ACCESS TO YOUR HOST FILESYSTEM.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "insecureRootCapabilities",
                "description": "Execute the command with all root capabilities. This is similar to running a command with \"sudo\" or executing \"docker run\" with the \"--privileged\" flag. Containerization does not provide any security guarantees when using this option. It should only be used when absolutely necessary and only with trusted commands.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "container",
                "description": "If set, override the default container used for the terminal.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "ContainerID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Nondeterministic."
                  }
                ]
              }
            ]
          },
          {
            "name": "withDirectory",
            "description": "Retrieves this directory plus a directory written at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the written directory (e.g., \"/src/\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "directory",
                "description": "Identifier of the directory to copy.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              },
              {
                "name": "exclude",
                "description": "Exclude artifacts that match the given pattern (e.g., [\"node_modules/\", \".git*\"]).",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "include",
                "description": "Include only artifacts that match the given pattern (e.g., [\"app/\", \"package.*\"]).",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withFile",
            "description": "Retrieves this directory plus the contents of the given file copied to the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the copied file (e.g., \"/file.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "source",
                "description": "Identifier of the file to copy.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FileID"
                  }
                },
                "directives": []
              },
              {
                "name": "permissions",
                "description": "Permission given to the copied file (e.g., 0600).",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withFiles",
            "description": "Retrieves this directory plus the contents of the given files copied to the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location where copied files should be placed (e.g., \"/src\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "sources",
                "description": "Identifiers of the files to copy.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "FileID"
                      }
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "permissions",
                "description": "Permission given to the copied files (e.g., 0600).",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withNewDirectory",
            "description": "Retrieves this directory plus a new directory created at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the directory created (e.g., \"/logs\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "permissions",
                "description": "Permission granted to the created directory (e.g., 0777).",
                "defaultValue": "420",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withNewFile",
            "description": "Retrieves this directory plus a new file written at the given path.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the written file (e.g., \"/file.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "contents",
                "description": "Content of the written file (e.g., \"Hello world!\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "permissions",
                "description": "Permission given to the copied file (e.g., 0600).",
                "defaultValue": "420",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withTimestamps",
            "description": "Retrieves this directory with all file/dir timestamps set to the given time.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "timestamp",
                "description": "Timestamp to set dir/files in.\n\nFormatted in seconds following Unix epoch (e.g., 1672531199).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutDirectory",
            "description": "Retrieves this directory with the directory at the given path removed.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the directory to remove (e.g., \".github/\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutFile",
            "description": "Retrieves this directory with the file at the given path removed.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the file to remove (e.g., \"/file.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutFiles",
            "description": "Retrieves this directory with the files at the given paths removed.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "paths",
                "description": "Location of the file to remove (e.g., [\"/file.txt\"]).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "DirectoryID",
        "description": "The `DirectoryID` scalar type represents an identifier for an object of type Directory.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Engine",
        "description": "The Dagger engine configuration and state",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this Engine.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "EngineID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "localCache",
            "description": "The local (on-disk) cache for the Dagger engine",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "EngineCache"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "EngineCache",
        "description": "A cache storage for the Dagger engine",
        "fields": [
          {
            "name": "entrySet",
            "description": "The current set of entries in the cache",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "EngineCacheEntrySet"
              }
            },
            "args": [
              {
                "name": "key",
                "description": "",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Cache is changing asynchronously in the background"
                  }
                ]
              }
            ]
          },
          {
            "name": "id",
            "description": "A unique identifier for this EngineCache.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "EngineCacheID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "keepBytes",
            "description": "The maximum bytes to keep in the cache without pruning, after which automatic pruning may kick in.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": true,
            "deprecationReason": "Use minFreeSpace instead.",
            "directives": [
              {
                "name": "deprecated",
                "args": [
                  {
                    "name": "reason",
                    "value": "Use minFreeSpace instead."
                  }
                ]
              }
            ]
          },
          {
            "name": "maxUsedSpace",
            "description": "The maximum bytes to keep in the cache without pruning.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "minFreeSpace",
            "description": "The target amount of free disk space the garbage collector will attempt to leave.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "prune",
            "description": "Prune the cache of releaseable entries",
            "type": {
              "kind": "SCALAR",
              "name": "Void"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Mutates mutable state"
                  }
                ]
              }
            ]
          },
          {
            "name": "reservedSpace",
            "description": "",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "EngineCacheEntry",
        "description": "An individual cache entry in a cache entry set",
        "fields": [
          {
            "name": "activelyUsed",
            "description": "Whether the cache entry is actively being used.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "createdTimeUnixNano",
            "description": "The time the cache entry was created, in Unix nanoseconds.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "description",
            "description": "The description of the cache entry.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "diskSpaceBytes",
            "description": "The disk space used by the cache entry.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this EngineCacheEntry.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "EngineCacheEntryID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "mostRecentUseTimeUnixNano",
            "description": "The most recent time the cache entry was used, in Unix nanoseconds.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "EngineCacheEntryID",
        "description": "The `EngineCacheEntryID` scalar type represents an identifier for an object of type EngineCacheEntry.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "EngineCacheEntrySet",
        "description": "A set of cache entries returned by a query to a cache",
        "fields": [
          {
            "name": "diskSpaceBytes",
            "description": "The total disk space used by the cache entries in this set.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "entries",
            "description": "The list of individual cache entries in the set",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EngineCacheEntry"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "entryCount",
            "description": "The number of cache entries in this set.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this EngineCacheEntrySet.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "EngineCacheEntrySetID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "EngineCacheEntrySetID",
        "description": "The `EngineCacheEntrySetID` scalar type represents an identifier for an object of type EngineCacheEntrySet.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "EngineCacheID",
        "description": "The `EngineCacheID` scalar type represents an identifier for an object of type EngineCache.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "EngineID",
        "description": "The `EngineID` scalar type represents an identifier for an object of type Engine.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "EnumTypeDef",
        "description": "A definition of a custom enum defined in a Module.",
        "fields": [
          {
            "name": "description",
            "description": "A doc string for the enum, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this EnumTypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "EnumTypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the enum.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceMap",
            "description": "The location of this enum declaration.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceModuleName",
            "description": "If this EnumTypeDef is associated with a Module, the name of the module. Unset otherwise.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "values",
            "description": "The values of the enum.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "EnumValueTypeDef"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "EnumTypeDefID",
        "description": "The `EnumTypeDefID` scalar type represents an identifier for an object of type EnumTypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "EnumValueTypeDef",
        "description": "A definition of a value in a custom enum defined in a Module.",
        "fields": [
          {
            "name": "description",
            "description": "A doc string for the enum value, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this EnumValueTypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "EnumValueTypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the enum value.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceMap",
            "description": "The location of this enum value declaration.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "EnumValueTypeDefID",
        "description": "The `EnumValueTypeDefID` scalar type represents an identifier for an object of type EnumValueTypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "EnvVariable",
        "description": "An environment variable name and value.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this EnvVariable.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "EnvVariableID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The environment variable name.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "value",
            "description": "The environment variable value.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "EnvVariableID",
        "description": "The `EnvVariableID` scalar type represents an identifier for an object of type EnvVariable.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Error",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this Error.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ErrorID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "message",
            "description": "A description of the error.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ErrorID",
        "description": "The `ErrorID` scalar type represents an identifier for an object of type Error.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "FieldTypeDef",
        "description": "A definition of a field on a custom object defined in a Module.\n\nA field on an object has a static value, as opposed to a function on an object whose value is computed by invoking code (and can accept arguments).",
        "fields": [
          {
            "name": "description",
            "description": "A doc string for the field, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this FieldTypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "FieldTypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the field in lowerCamelCase format.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceMap",
            "description": "The location of this field declaration.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "typeDef",
            "description": "The type of the field.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "FieldTypeDefID",
        "description": "The `FieldTypeDefID` scalar type represents an identifier for an object of type FieldTypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "File",
        "description": "A file.",
        "fields": [
          {
            "name": "contents",
            "description": "Retrieves the contents of the file.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "digest",
            "description": "Return the file's digest. The format of the digest is not guaranteed to be stable between releases of Dagger. It is guaranteed to be stable between invocations of the same Dagger engine.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [
              {
                "name": "excludeMetadata",
                "description": "If true, exclude metadata from the digest.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "export",
            "description": "Writes the file to a file path on the host.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the written directory (e.g., \"output.txt\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "allowParentDirPath",
                "description": "If allowParentDirPath is true, the path argument can be a directory path, in which case the file will be created in that directory.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Writes to the local host."
                  }
                ]
              }
            ]
          },
          {
            "name": "id",
            "description": "A unique identifier for this File.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "FileID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "Retrieves the name of the file.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "size",
            "description": "Retrieves the size of the file, in bytes.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sync",
            "description": "Force evaluation in the engine.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "FileID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withName",
            "description": "Retrieves this file with its name set to the given name.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "Name to set file to.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withTimestamps",
            "description": "Retrieves this file with its created/modified timestamps set to the given time.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "timestamp",
                "description": "Timestamp to set dir/files in.\n\nFormatted in seconds following Unix epoch (e.g., 1672531199).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "FileID",
        "description": "The `FileID` scalar type represents an identifier for an object of type File.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "Float",
        "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Function",
        "description": "Function represents a resolver provided by a Module.\n\nA function always evaluates against a parent object and is given a set of named arguments.",
        "fields": [
          {
            "name": "args",
            "description": "Arguments accepted by the function, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FunctionArg"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "description",
            "description": "A doc string for the function, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this Function.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "FunctionID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the function.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "returnType",
            "description": "The type returned by the function.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceMap",
            "description": "The location of this function declaration.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withArg",
            "description": "Returns the function with the provided argument",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Function"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the argument",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "typeDef",
                "description": "The type of the argument",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TypeDefID"
                  }
                },
                "directives": []
              },
              {
                "name": "description",
                "description": "A doc string for the argument, if any",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "defaultValue",
                "description": "A default value to use for this argument if not explicitly set by the caller, if any",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "JSON"
                },
                "directives": []
              },
              {
                "name": "defaultPath",
                "description": "If the argument is a Directory or File type, default to load path from context directory, relative to root directory.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "ignore",
                "description": "Patterns to ignore when loading the contextual argument value.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "sourceMap",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "SourceMapID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withDescription",
            "description": "Returns the function with the given doc string.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Function"
              }
            },
            "args": [
              {
                "name": "description",
                "description": "The doc string to set.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withSourceMap",
            "description": "Returns the function with the given source map.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Function"
              }
            },
            "args": [
              {
                "name": "sourceMap",
                "description": "The source map for the function definition.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SourceMapID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "FunctionArg",
        "description": "An argument accepted by a function.\n\nThis is a specification for an argument at function definition time, not an argument passed at function call time.",
        "fields": [
          {
            "name": "defaultPath",
            "description": "Only applies to arguments of type File or Directory. If the argument is not set, load it from the given path in the context directory",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "defaultValue",
            "description": "A default value to use for this argument when not explicitly set by the caller, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "description",
            "description": "A doc string for the argument, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this FunctionArg.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "FunctionArgID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "ignore",
            "description": "Only applies to arguments of type Directory. The ignore patterns are applied to the input directory, and matching entries are filtered out, in a cache-efficient manner.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the argument in lowerCamelCase format.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceMap",
            "description": "The location of this arg declaration.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "typeDef",
            "description": "The type of the argument.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "FunctionArgID",
        "description": "The `FunctionArgID` scalar type represents an identifier for an object of type FunctionArg.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "FunctionCall",
        "description": "An active function call.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this FunctionCall.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "FunctionCallID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "inputArgs",
            "description": "The argument values the function is being invoked with.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FunctionCallArgValue"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the function being called.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "parent",
            "description": "The value of the parent object of the function being called. If the function is top-level to the module, this is always an empty object.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "parentName",
            "description": "The name of the parent object of the function being called. If the function is top-level to the module, this is the name of the module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "returnError",
            "description": "Return an error from the function.",
            "type": {
              "kind": "SCALAR",
              "name": "Void"
            },
            "args": [
              {
                "name": "error",
                "description": "The error to return.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ErrorID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Updates internal engine state with the given value."
                  }
                ]
              }
            ]
          },
          {
            "name": "returnValue",
            "description": "Set the return value of the function call to the provided value.",
            "type": {
              "kind": "SCALAR",
              "name": "Void"
            },
            "args": [
              {
                "name": "value",
                "description": "JSON serialization of the return value.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "JSON"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Updates internal engine state with the given value."
                  }
                ]
              }
            ]
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "FunctionCallArgValue",
        "description": "A value passed as a named argument to a function call.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this FunctionCallArgValue.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "FunctionCallArgValueID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the argument.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "value",
            "description": "The value of the argument represented as a JSON serialized string.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "FunctionCallArgValueID",
        "description": "The `FunctionCallArgValueID` scalar type represents an identifier for an object of type FunctionCallArgValue.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "FunctionCallID",
        "description": "The `FunctionCallID` scalar type represents an identifier for an object of type FunctionCall.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "FunctionID",
        "description": "The `FunctionID` scalar type represents an identifier for an object of type Function.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "GeneratedCode",
        "description": "The result of running an SDK's codegen.",
        "fields": [
          {
            "name": "code",
            "description": "The directory containing the generated code.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this GeneratedCode.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "GeneratedCodeID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "vcsGeneratedPaths",
            "description": "List of paths to mark generated in version control (i.e. .gitattributes).",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "vcsIgnoredPaths",
            "description": "List of paths to ignore in version control (i.e. .gitignore).",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withVCSGeneratedPaths",
            "description": "Set the list of paths to mark generated in version control.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GeneratedCode"
              }
            },
            "args": [
              {
                "name": "paths",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withVCSIgnoredPaths",
            "description": "Set the list of paths to ignore in version control.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GeneratedCode"
              }
            },
            "args": [
              {
                "name": "paths",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "GeneratedCodeID",
        "description": "The `GeneratedCodeID` scalar type represents an identifier for an object of type GeneratedCode.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "GitModuleSource",
        "description": "Module source originating from a git repo.",
        "fields": [
          {
            "name": "cloneRef",
            "description": "The ref to clone the root of the git repo from",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "commit",
            "description": "The resolved commit of the git repo this source points to.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "contextDirectory",
            "description": "The directory containing everything needed to load load and use the module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "htmlRepoURL",
            "description": "The URL to access the web view of the repository (e.g., GitHub, GitLab, Bitbucket)",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "htmlURL",
            "description": "The URL to the source's git repo in a web browser",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this GitModuleSource.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "GitModuleSourceID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "root",
            "description": "The clean module name of the root of the module",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "rootSubpath",
            "description": "The path to the root of the module source under the context directory. This directory contains its configuration file. It also contains its source code (possibly as a subdirectory).",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "version",
            "description": "The specified version of the git repo this source points to.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "GitModuleSourceID",
        "description": "The `GitModuleSourceID` scalar type represents an identifier for an object of type GitModuleSource.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "GitRef",
        "description": "A git ref (tag, branch, or commit).",
        "fields": [
          {
            "name": "commit",
            "description": "The resolved commit id at this ref.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this GitRef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "GitRefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "tree",
            "description": "The filesystem tree at this ref.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "discardGitDir",
                "description": "Set to true to discard .git directory.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "GitRefID",
        "description": "The `GitRefID` scalar type represents an identifier for an object of type GitRef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "GitRepository",
        "description": "A git repository.",
        "fields": [
          {
            "name": "branch",
            "description": "Returns details of a branch.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRef"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "Branch's name (e.g., \"main\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "commit",
            "description": "Returns details of a commit.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "Identifier of the commit (e.g., \"b6315d8f2810962c601af73f86831f6866ea798b\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "head",
            "description": "Returns details for HEAD.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRef"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this GitRepository.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "GitRepositoryID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "ref",
            "description": "Returns details of a ref.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRef"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "Ref's name (can be a commit identifier, a tag name, a branch name, or a fully-qualified ref).",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "tag",
            "description": "Returns details of a tag.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRef"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "Tag's name (e.g., \"v0.3.9\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "tags",
            "description": "tags that match any of the given glob patterns.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [
              {
                "name": "patterns",
                "description": "Glob patterns (e.g., \"refs/tags/v*\").",
                "defaultValue": null,
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withAuthHeader",
            "description": "Header to authenticate the remote with.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRepository"
              }
            },
            "args": [
              {
                "name": "header",
                "description": "Secret used to populate the Authorization HTTP header",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SecretID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withAuthToken",
            "description": "Token to authenticate the remote with.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRepository"
              }
            },
            "args": [
              {
                "name": "token",
                "description": "Secret used to populate the password during basic HTTP Authorization",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SecretID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "GitRepositoryID",
        "description": "The `GitRepositoryID` scalar type represents an identifier for an object of type GitRepository.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Host",
        "description": "Information about the host environment.",
        "fields": [
          {
            "name": "directory",
            "description": "Accesses a directory on the host.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the directory to access (e.g., \".\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "exclude",
                "description": "Exclude artifacts that match the given pattern (e.g., [\"node_modules/\", \".git*\"]).",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "include",
                "description": "Include only artifacts that match the given pattern (e.g., [\"app/\", \"package.*\"]).",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Loads data from the local machine.\n\nDespite being impure, this field returns a pure Directory object. It does this by uploading the requested path to the internal content store and returning a content-addressed Directory using the `blob()` API."
                  }
                ]
              }
            ]
          },
          {
            "name": "file",
            "description": "Accesses a file on the host.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the file to retrieve (e.g., \"README.md\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Loads data from the local machine.\n\nDespite being impure, this field returns a pure File object. It does this by uploading the requested path to the internal content store and returning a content-addressed File using from the `blob()` API."
                  }
                ]
              }
            ]
          },
          {
            "name": "id",
            "description": "A unique identifier for this Host.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "HostID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "service",
            "description": "Creates a service that forwards traffic to a specified address via the host.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Service"
              }
            },
            "args": [
              {
                "name": "host",
                "description": "Upstream host to forward traffic to.",
                "defaultValue": "\"localhost\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "ports",
                "description": "Ports to expose via the service, forwarding through the host network.\n\nIf a port's frontend is unspecified or 0, it defaults to the same as the backend port.\n\nAn empty set of ports is not valid; an error will be returned.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "INPUT_OBJECT",
                        "name": "PortForward"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Value depends on the caller as it points to their host."
                  }
                ]
              }
            ]
          },
          {
            "name": "setSecretFile",
            "description": "Sets a secret given a user-defined name and the file path on the host, and returns the secret.\n\nThe file is limited to a size of 512000 bytes.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Secret"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The user defined name for this secret.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "path",
                "description": "Location of the file to set as a secret.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "`setSecretFile` reads its value from the local machine."
                  }
                ]
              }
            ]
          },
          {
            "name": "tunnel",
            "description": "Creates a tunnel that forwards traffic from the host to a service.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Service"
              }
            },
            "args": [
              {
                "name": "service",
                "description": "Service to send traffic from the tunnel.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ServiceID"
                  }
                },
                "directives": []
              },
              {
                "name": "ports",
                "description": "Configure explicit port forwarding rules for the tunnel.\n\nIf a port's frontend is unspecified or 0, a random port will be chosen by the host.\n\nIf no ports are given, all of the service's ports are forwarded. If native is true, each port maps to the same port on the host. If native is false, each port maps to a random port chosen by the host.\n\nIf ports are given and native is true, the ports are additive.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PortForward"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "native",
                "description": "Map each service port to the same port on the host, as if the service were running natively.\n\nNote: enabling may result in port conflicts.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "unixSocket",
            "description": "Accesses a Unix socket on the host.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Socket"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "Location of the Unix socket (e.g., \"/var/run/docker.sock\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Value depends on the caller as it points to their host."
                  }
                ]
              }
            ]
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "HostID",
        "description": "The `HostID` scalar type represents an identifier for an object of type Host.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "ENUM",
        "name": "ImageLayerCompression",
        "description": "Compression algorithm to use for image layers.",
        "enumValues": [
          {
            "name": "Gzip",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "Zstd",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "EStarGZ",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "Uncompressed",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "ENUM",
        "name": "ImageMediaTypes",
        "description": "Mediatypes to use in published or exported image metadata.",
        "enumValues": [
          {
            "name": "OCIMediaTypes",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "DockerMediaTypes",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "InputTypeDef",
        "description": "A graphql input type, which is essentially just a group of named args.\nThis is currently only used to represent pre-existing usage of graphql input types\nin the core API. It is not used by user modules and shouldn't ever be as user\nmodule accept input objects via their id rather than graphql input types.",
        "fields": [
          {
            "name": "fields",
            "description": "Static fields defined on this input object, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FieldTypeDef"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this InputTypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "InputTypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the input object.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "InputTypeDefID",
        "description": "The `InputTypeDefID` scalar type represents an identifier for an object of type InputTypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "Int",
        "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "InterfaceTypeDef",
        "description": "A definition of a custom interface defined in a Module.",
        "fields": [
          {
            "name": "description",
            "description": "The doc string for the interface, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "functions",
            "description": "Functions defined on this interface, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Function"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this InterfaceTypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "InterfaceTypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the interface.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceMap",
            "description": "The location of this interface declaration.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceModuleName",
            "description": "If this InterfaceTypeDef is associated with a Module, the name of the module. Unset otherwise.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "InterfaceTypeDefID",
        "description": "The `InterfaceTypeDefID` scalar type represents an identifier for an object of type InterfaceTypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "JSON",
        "description": "An arbitrary JSON-encoded value.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Label",
        "description": "A simple key value object that represents a label.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this Label.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "LabelID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The label name.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "value",
            "description": "The label value.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "LabelID",
        "description": "The `LabelID` scalar type represents an identifier for an object of type Label.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "ListTypeDef",
        "description": "A definition of a list type in a Module.",
        "fields": [
          {
            "name": "elementTypeDef",
            "description": "The type of the elements in the list.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this ListTypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ListTypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ListTypeDefID",
        "description": "The `ListTypeDefID` scalar type represents an identifier for an object of type ListTypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "LocalModuleSource",
        "description": "Module source that that originates from a path locally relative to an arbitrary directory.",
        "fields": [
          {
            "name": "contextDirectory",
            "description": "The directory containing everything needed to load load and use the module.",
            "type": {
              "kind": "OBJECT",
              "name": "Directory"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this LocalModuleSource.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "LocalModuleSourceID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "relHostPath",
            "description": "The relative path to the module root from the host directory",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "rootSubpath",
            "description": "The path to the root of the module source under the context directory. This directory contains its configuration file. It also contains its source code (possibly as a subdirectory).",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "LocalModuleSourceID",
        "description": "The `LocalModuleSourceID` scalar type represents an identifier for an object of type LocalModuleSource.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Module",
        "description": "A Dagger module.",
        "fields": [
          {
            "name": "dependencies",
            "description": "Modules used by this module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Module"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "dependencyConfig",
            "description": "The dependencies as configured by the module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ModuleDependency"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "description",
            "description": "The doc string of the module, if any",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "enums",
            "description": "Enumerations served by this module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TypeDef"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "generatedContextDiff",
            "description": "The generated files and directories made on top of the module source's context directory.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "generatedContextDirectory",
            "description": "The module source's context plus any configuration and source files created by codegen.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this Module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ModuleID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "initialize",
            "description": "Retrieves the module with the objects loaded via its SDK.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "interfaces",
            "description": "Interfaces served by this module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TypeDef"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the module",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "objects",
            "description": "Objects served by this module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TypeDef"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "runtime",
            "description": "The container that runs the module's entrypoint. It will fail to execute if the module doesn't compile.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sdk",
            "description": "The SDK used by this module. Either a name of a builtin SDK or a module source ref string pointing to the SDK's implementation.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "serve",
            "description": "Serve a module's API in the current session.\n\nNote: this can only be called once per session. In the future, it could return a stream or service to remove the side effect.",
            "type": {
              "kind": "SCALAR",
              "name": "Void"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Mutates the calling session's global schema."
                  }
                ]
              }
            ]
          },
          {
            "name": "source",
            "description": "The source for the module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withDescription",
            "description": "Retrieves the module with the given description",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [
              {
                "name": "description",
                "description": "The description to set",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withEnum",
            "description": "This module plus the given Enum type and associated values",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [
              {
                "name": "enum",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withInterface",
            "description": "This module plus the given Interface type and associated functions",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [
              {
                "name": "iface",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withObject",
            "description": "This module plus the given Object type and associated functions.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [
              {
                "name": "object",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withSource",
            "description": "Retrieves the module with basic configuration loaded if present.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [
              {
                "name": "source",
                "description": "The module source to initialize from.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ModuleSourceID"
                  }
                },
                "directives": []
              },
              {
                "name": "engineVersion",
                "description": "The engine version to upgrade to.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "ModuleDependency",
        "description": "The configuration of dependency of a module.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this ModuleDependency.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ModuleDependencyID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the dependency module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "source",
            "description": "The source for the dependency module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ModuleDependencyID",
        "description": "The `ModuleDependencyID` scalar type represents an identifier for an object of type ModuleDependency.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ModuleID",
        "description": "The `ModuleID` scalar type represents an identifier for an object of type Module.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "ModuleSource",
        "description": "The source needed to load and run a module, along with any metadata about the source such as versions/urls/etc.",
        "fields": [
          {
            "name": "asGitSource",
            "description": "If the source is a of kind git, the git source representation of it.",
            "type": {
              "kind": "OBJECT",
              "name": "GitModuleSource"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asLocalSource",
            "description": "If the source is of kind local, the local source representation of it.",
            "type": {
              "kind": "OBJECT",
              "name": "LocalModuleSource"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asModule",
            "description": "Load the source as a module. If this is a local source, the parent directory must have been provided during module source creation",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [
              {
                "name": "engineVersion",
                "description": "The engine version to upgrade to.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asString",
            "description": "A human readable ref string representation of this module source.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "configExists",
            "description": "Returns whether the module source has a configuration file.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "contextDirectory",
            "description": "The directory containing everything needed to load and use the module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "dependencies",
            "description": "The effective module source dependencies from the configuration, and calls to withDependencies and withoutDependencies.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ModuleDependency"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "digest",
            "description": "Return the module source's content digest. The format of the digest is not guaranteed to be stable between releases of Dagger. It is guaranteed to be stable between invocations of the same Dagger engine.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "directory",
            "description": "The directory containing the module configuration and source code (source code may be in a subdir).",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "The path from the source directory to select.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this ModuleSource.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ModuleSourceID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "kind",
            "description": "The kind of source (e.g. local, git, etc.)",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "ENUM",
                "name": "ModuleSourceKind"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "moduleName",
            "description": "If set, the name of the module this source references, including any overrides at runtime by callers.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "moduleOriginalName",
            "description": "The original name of the module this source references, as defined in the module configuration.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "pin",
            "description": "The pinned version of this module source.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "resolveContextPathFromCaller",
            "description": "The path to the module source's context directory on the caller's filesystem. Only valid for local sources.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Queries live caller-specific data from their filesystem."
                  }
                ]
              }
            ]
          },
          {
            "name": "resolveDependency",
            "description": "Resolve the provided module source arg as a dependency relative to this module source.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "dep",
                "description": "The dependency module source to resolve.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ModuleSourceID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "resolveDirectoryFromCaller",
            "description": "Load a directory from the caller optionally with a given view applied.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "The path on the caller's filesystem to load.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "viewName",
                "description": "If set, the name of the view to apply to the path.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "ignore",
                "description": "Patterns to ignore when loading the directory.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Queries live caller-specific data from their filesystem."
                  }
                ]
              }
            ]
          },
          {
            "name": "resolveFromCaller",
            "description": "Load the source from its path on the caller's filesystem, including only needed+configured files and directories. Only valid for local sources.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Loads live caller-specific data from their filesystem."
                  }
                ]
              }
            ]
          },
          {
            "name": "sourceRootSubpath",
            "description": "The path relative to context of the root of the module source, which contains dagger.json. It also contains the module implementation source code, but that may or may not being a subdir of this root.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceSubpath",
            "description": "The path relative to context of the module implementation source code.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "view",
            "description": "Retrieve a named view defined for this module source.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSourceView"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the view to retrieve.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "views",
            "description": "The named views defined for this module source, which are sets of directory filters that can be applied to directory arguments provided to functions.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ModuleSourceView"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withContextDirectory",
            "description": "Update the module source with a new context directory. Only valid for local sources.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "dir",
                "description": "The directory to set as the context directory.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withDependencies",
            "description": "Append the provided dependencies to the module source's dependency list.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "dependencies",
                "description": "The dependencies to append.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "ModuleDependencyID"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withInit",
            "description": "Sets module init arguments",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "merge",
                "description": "Merge module dependencies into the current project's",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withName",
            "description": "Update the module source with a new name.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name to set.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withSDK",
            "description": "Update the module source with a new SDK.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "sdk",
                "description": "The SDK to set.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withSourceSubpath",
            "description": "Update the module source with a new source subpath.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "path",
                "description": "The path to set as the source subpath.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withUpdateDependencies",
            "description": "Update one or more module dependencies.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "dependencies",
                "description": "The dependencies to update.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withView",
            "description": "Update the module source with a new named view.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the view to set.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "patterns",
                "description": "The patterns to set as the view filters.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withoutDependencies",
            "description": "Remove the provided dependencies from the module source's dependency list.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "dependencies",
                "description": "The dependencies to remove.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "LIST",
                    "ofType": {
                      "kind": "NON_NULL",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String"
                      }
                    }
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ModuleSourceID",
        "description": "The `ModuleSourceID` scalar type represents an identifier for an object of type ModuleSource.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "ENUM",
        "name": "ModuleSourceKind",
        "description": "The kind of module source.",
        "enumValues": [
          {
            "name": "LOCAL_SOURCE",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "GIT_SOURCE",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "ModuleSourceView",
        "description": "A named set of path filters that can be applied to directory arguments provided to functions.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this ModuleSourceView.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ModuleSourceViewID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the view",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "patterns",
            "description": "The patterns of the view used to filter paths",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ModuleSourceViewID",
        "description": "The `ModuleSourceViewID` scalar type represents an identifier for an object of type ModuleSourceView.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "ENUM",
        "name": "NetworkProtocol",
        "description": "Transport layer network protocol associated to a port.",
        "enumValues": [
          {
            "name": "TCP",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "UDP",
            "description": "",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "ObjectTypeDef",
        "description": "A definition of a custom object defined in a Module.",
        "fields": [
          {
            "name": "constructor",
            "description": "The function used to construct new instances of this object, if any",
            "type": {
              "kind": "OBJECT",
              "name": "Function"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "description",
            "description": "The doc string for the object, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "fields",
            "description": "Static fields defined on this object, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "FieldTypeDef"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "functions",
            "description": "Functions defined on this object, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Function"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this ObjectTypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ObjectTypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the object.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceMap",
            "description": "The location of this object declaration.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceModuleName",
            "description": "If this ObjectTypeDef is associated with a Module, the name of the module. Unset otherwise.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ObjectTypeDefID",
        "description": "The `ObjectTypeDefID` scalar type represents an identifier for an object of type ObjectTypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PipelineLabel",
        "description": "Key value object that represents a pipeline label.",
        "inputFields": [
          {
            "name": "name",
            "description": "Label name.",
            "defaultValue": null,
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "directives": []
          },
          {
            "name": "value",
            "description": "Label value.",
            "defaultValue": null,
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "Platform",
        "description": "The platform config OS and architecture in a Container.\n\nThe format is [os]/[platform]/[version] (e.g., \"darwin/arm64/v7\", \"windows/amd64\", \"linux/arm64\").",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Port",
        "description": "A port exposed by a container.",
        "fields": [
          {
            "name": "description",
            "description": "The port description.",
            "type": {
              "kind": "SCALAR",
              "name": "String"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "experimentalSkipHealthcheck",
            "description": "Skip the health check when run as a service.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this Port.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "PortID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "port",
            "description": "The port number.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "protocol",
            "description": "The transport layer protocol.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "ENUM",
                "name": "NetworkProtocol"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PortForward",
        "description": "Port forwarding rules for tunneling network traffic.",
        "inputFields": [
          {
            "name": "frontend",
            "description": "Port to expose to clients. If unspecified, a default will be chosen.",
            "defaultValue": null,
            "type": {
              "kind": "SCALAR",
              "name": "Int"
            },
            "directives": []
          },
          {
            "name": "backend",
            "description": "Destination port for traffic.",
            "defaultValue": null,
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "directives": []
          },
          {
            "name": "protocol",
            "description": "Transport layer protocol to use for traffic.",
            "defaultValue": "TCP",
            "type": {
              "kind": "ENUM",
              "name": "NetworkProtocol"
            },
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "PortID",
        "description": "The `PortID` scalar type represents an identifier for an object of type Port.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Query",
        "description": "The root of the DAG.",
        "fields": [
          {
            "name": "blob",
            "description": "Retrieves a content-addressed blob.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "digest",
                "description": "Digest of the blob",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "builtinContainer",
            "description": "Retrieves a container builtin to the engine.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "digest",
                "description": "Digest of the image manifest",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "cacheVolume",
            "description": "Constructs a cache volume for a given cache key.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "CacheVolume"
              }
            },
            "args": [
              {
                "name": "key",
                "description": "A string identifier to target this cache volume (e.g., \"modules-cache\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "namespace",
                "description": "",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "cache volume should be namespaced"
                  }
                ]
              }
            ]
          },
          {
            "name": "container",
            "description": "Creates a scratch container.\n\nOptional platform argument initializes new containers to execute and publish as that platform. Platform defaults to that of the builder's host.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "platform",
                "description": "Platform to initialize the container with.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Platform"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "currentFunctionCall",
            "description": "The FunctionCall context that the SDK caller is currently executing in.\n\nIf the caller is not currently executing in a function, this will return an error.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "FunctionCall"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Changes depending on which function calls it."
                  }
                ]
              }
            ]
          },
          {
            "name": "currentModule",
            "description": "The module currently being served in the session, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "CurrentModule"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Changes depending on which module is calling it."
                  }
                ]
              }
            ]
          },
          {
            "name": "currentTypeDefs",
            "description": "The TypeDef representations of the objects currently being served in the session.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TypeDef"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Changes depending on which modules are currently installed."
                  }
                ]
              }
            ]
          },
          {
            "name": "defaultPlatform",
            "description": "The default platform of the engine.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Platform"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "directory",
            "description": "Creates an empty directory.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "engine",
            "description": "The Dagger engine container configuration and state",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Engine"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "error",
            "description": "Create a new error.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Error"
              }
            },
            "args": [
              {
                "name": "message",
                "description": "A brief description of the error.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "function",
            "description": "Creates a function.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Function"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "Name of the function, in its original format from the implementation language.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "returnType",
                "description": "Return type of the function.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "generatedCode",
            "description": "Create a code generation result, given a directory containing the generated code.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GeneratedCode"
              }
            },
            "args": [
              {
                "name": "code",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "git",
            "description": "Queries a Git repository.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRepository"
              }
            },
            "args": [
              {
                "name": "url",
                "description": "URL of the git repository.\n\nCan be formatted as `https://{host}/{owner}/{repo}`, `git@{host}:{owner}/{repo}`.\n\nSuffix \".git\" is optional.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "keepGitDir",
                "description": "DEPRECATED: Set to true to keep .git directory.",
                "defaultValue": "true",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": [
                  {
                    "name": "deprecated",
                    "args": [
                      {
                        "name": "reason",
                        "value": "Set to true to keep .git directory."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "experimentalServiceHost",
                "description": "A service which must be started before the repo is fetched.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "ServiceID"
                },
                "directives": []
              },
              {
                "name": "sshKnownHosts",
                "description": "Set SSH known hosts",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "sshAuthSocket",
                "description": "Set SSH auth socket",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "SocketID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "host",
            "description": "Queries the host environment.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Host"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "http",
            "description": "Returns a file containing an http remote url content.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "url",
                "description": "HTTP url to get the content from (e.g., \"https://docs.dagger.io\").",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "experimentalServiceHost",
                "description": "A service which must be started before the URL is fetched.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "ServiceID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "loadCacheVolumeFromID",
            "description": "Load a CacheVolume from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "CacheVolume"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "CacheVolumeID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadContainerFromID",
            "description": "Load a Container from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Container"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ContainerID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadCurrentModuleFromID",
            "description": "Load a CurrentModule from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "CurrentModule"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "CurrentModuleID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadDirectoryFromID",
            "description": "Load a Directory from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Directory"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "DirectoryID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadEngineCacheEntryFromID",
            "description": "Load a EngineCacheEntry from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "EngineCacheEntry"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "EngineCacheEntryID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadEngineCacheEntrySetFromID",
            "description": "Load a EngineCacheEntrySet from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "EngineCacheEntrySet"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "EngineCacheEntrySetID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadEngineCacheFromID",
            "description": "Load a EngineCache from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "EngineCache"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "EngineCacheID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadEngineFromID",
            "description": "Load a Engine from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Engine"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "EngineID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadEnumTypeDefFromID",
            "description": "Load a EnumTypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "EnumTypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "EnumTypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadEnumValueTypeDefFromID",
            "description": "Load a EnumValueTypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "EnumValueTypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "EnumValueTypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadEnvVariableFromID",
            "description": "Load a EnvVariable from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "EnvVariable"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "EnvVariableID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadErrorFromID",
            "description": "Load a Error from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Error"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ErrorID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadFieldTypeDefFromID",
            "description": "Load a FieldTypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "FieldTypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FieldTypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadFileFromID",
            "description": "Load a File from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "File"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FileID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadFunctionArgFromID",
            "description": "Load a FunctionArg from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "FunctionArg"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FunctionArgID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadFunctionCallArgValueFromID",
            "description": "Load a FunctionCallArgValue from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "FunctionCallArgValue"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FunctionCallArgValueID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadFunctionCallFromID",
            "description": "Load a FunctionCall from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "FunctionCall"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FunctionCallID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadFunctionFromID",
            "description": "Load a Function from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Function"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FunctionID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadGeneratedCodeFromID",
            "description": "Load a GeneratedCode from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GeneratedCode"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "GeneratedCodeID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadGitModuleSourceFromID",
            "description": "Load a GitModuleSource from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitModuleSource"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "GitModuleSourceID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadGitRefFromID",
            "description": "Load a GitRef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "GitRefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadGitRepositoryFromID",
            "description": "Load a GitRepository from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "GitRepository"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "GitRepositoryID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadHostFromID",
            "description": "Load a Host from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Host"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "HostID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadInputTypeDefFromID",
            "description": "Load a InputTypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "InputTypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "InputTypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadInterfaceTypeDefFromID",
            "description": "Load a InterfaceTypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "InterfaceTypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "InterfaceTypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadLabelFromID",
            "description": "Load a Label from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Label"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "LabelID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadListTypeDefFromID",
            "description": "Load a ListTypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ListTypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ListTypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadLocalModuleSourceFromID",
            "description": "Load a LocalModuleSource from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "LocalModuleSource"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "LocalModuleSourceID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadModuleDependencyFromID",
            "description": "Load a ModuleDependency from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleDependency"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ModuleDependencyID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadModuleFromID",
            "description": "Load a Module from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ModuleID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadModuleSourceFromID",
            "description": "Load a ModuleSource from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ModuleSourceID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadModuleSourceViewFromID",
            "description": "Load a ModuleSourceView from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSourceView"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ModuleSourceViewID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadObjectTypeDefFromID",
            "description": "Load a ObjectTypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ObjectTypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ObjectTypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadPortFromID",
            "description": "Load a Port from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Port"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "PortID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadScalarTypeDefFromID",
            "description": "Load a ScalarTypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ScalarTypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ScalarTypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadSecretFromID",
            "description": "Load a Secret from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Secret"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SecretID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadServiceFromID",
            "description": "Load a Service from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Service"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ServiceID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadSocketFromID",
            "description": "Load a Socket from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Socket"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SocketID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadSourceMapFromID",
            "description": "Load a SourceMap from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "SourceMapID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadTerminalFromID",
            "description": "Load a Terminal from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Terminal"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TerminalID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "loadTypeDefFromID",
            "description": "Load a TypeDef from its ID.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "id",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "The given ID ultimately determines the purity of its result."
                  }
                ]
              }
            ]
          },
          {
            "name": "module",
            "description": "Create a new module.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Module"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "moduleDependency",
            "description": "Create a new module dependency configuration from a module source and name",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleDependency"
              }
            },
            "args": [
              {
                "name": "source",
                "description": "The source of the dependency",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ModuleSourceID"
                  }
                },
                "directives": []
              },
              {
                "name": "name",
                "description": "If set, the name to use for the dependency. Otherwise, once installed to a parent module, the name of the dependency module will be used by default.",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "moduleSource",
            "description": "Create a new module source instance from a source ref string.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "ModuleSource"
              }
            },
            "args": [
              {
                "name": "refString",
                "description": "The string ref representation of the module source",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "refPin",
                "description": "The pinned version of the module source",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "stable",
                "description": "If true, enforce that the source is a stable version for source kinds that support versioning.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              },
              {
                "name": "relHostPath",
                "description": "The relative path to the module root from the host directory",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "secret",
            "description": "Reference a secret by name.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Secret"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "accessor",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "setSecret",
            "description": "Sets a secret given a user defined name to its plaintext and returns the secret.\n\nThe plaintext value is limited to a size of 128000 bytes.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Secret"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The user defined name for this secret",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "plaintext",
                "description": "The plaintext of the secret",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "`setSecret` mutates state in the internal secret store."
                  }
                ]
              }
            ]
          },
          {
            "name": "sourceMap",
            "description": "Creates source map metadata.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "SourceMap"
              }
            },
            "args": [
              {
                "name": "filename",
                "description": "The filename from the module source.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "line",
                "description": "The line number within the filename.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int"
                  }
                },
                "directives": []
              },
              {
                "name": "column",
                "description": "The column number within the line.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "typeDef",
            "description": "Create a new TypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "version",
            "description": "Get the current Dagger Engine version.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "ENUM",
        "name": "ReturnType",
        "description": "Expected return type of an execution",
        "enumValues": [
          {
            "name": "SUCCESS",
            "description": "A successful execution (exit code 0)",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "FAILURE",
            "description": "A failed execution (exit codes 1-127)",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "ANY",
            "description": "Any execution (exit codes 0-127)",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "ScalarTypeDef",
        "description": "A definition of a custom scalar defined in a Module.",
        "fields": [
          {
            "name": "description",
            "description": "A doc string for the scalar, if any.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this ScalarTypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ScalarTypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of the scalar.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sourceModuleName",
            "description": "If this ScalarTypeDef is associated with a Module, the name of the module. Unset otherwise.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ScalarTypeDefID",
        "description": "The `ScalarTypeDefID` scalar type represents an identifier for an object of type ScalarTypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Secret",
        "description": "A reference to a secret value, which can be handled more safely than the value itself.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this Secret.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "SecretID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "name",
            "description": "The name of this secret.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "plaintext",
            "description": "The value of this secret.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "A secret's `plaintext` value in the internal secret store state can change."
                  }
                ]
              }
            ]
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "SecretID",
        "description": "The `SecretID` scalar type represents an identifier for an object of type Secret.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Service",
        "description": "A content-addressed service providing TCP connectivity.",
        "fields": [
          {
            "name": "endpoint",
            "description": "Retrieves an endpoint that clients can use to reach this container.\n\nIf no port is specified, the first exposed port is used. If none exist an error is returned.\n\nIf a scheme is specified, a URL is returned. Otherwise, a host:port pair is returned.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [
              {
                "name": "port",
                "description": "The exposed port number for the endpoint",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int"
                },
                "directives": []
              },
              {
                "name": "scheme",
                "description": "Return a URL with the given scheme, eg. http for http://",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "A tunnel service's endpoint can change if tunnel service is restarted."
                  }
                ]
              }
            ]
          },
          {
            "name": "hostname",
            "description": "Retrieves a hostname which can be used by clients to reach this container.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this Service.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ServiceID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "ports",
            "description": "Retrieves the list of ports provided by the service.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Port"
                  }
                }
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "A tunnel service's ports can change each time it is restarted."
                  }
                ]
              }
            ]
          },
          {
            "name": "start",
            "description": "Start the service and wait for its health checks to succeed.\n\nServices bound to a Container do not need to be manually started.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ServiceID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Imperatively mutates runtime state."
                  }
                ]
              }
            ]
          },
          {
            "name": "stop",
            "description": "Stop the service.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "ServiceID"
              }
            },
            "args": [
              {
                "name": "kill",
                "description": "Immediately kill the service without waiting for a graceful exit",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Imperatively mutates runtime state."
                  }
                ]
              }
            ]
          },
          {
            "name": "up",
            "description": "Creates a tunnel that forwards traffic from the caller's network to this service.",
            "type": {
              "kind": "SCALAR",
              "name": "Void"
            },
            "args": [
              {
                "name": "ports",
                "description": "List of frontend/backend port mappings to forward.\n\nFrontend is the port accepting traffic on the host, backend is the service port.",
                "defaultValue": "[]",
                "type": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "PortForward"
                    }
                  }
                },
                "directives": []
              },
              {
                "name": "random",
                "description": "Bind each tunnel port to a random port on the host.",
                "defaultValue": "false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": [
              {
                "name": "impure",
                "args": [
                  {
                    "name": "reason",
                    "value": "Starts a host tunnel, possibly with ports that change each time it's started."
                  }
                ]
              }
            ]
          },
          {
            "name": "withHostname",
            "description": "Configures a hostname which can be used by clients within the session to reach this container.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "Service"
              }
            },
            "args": [
              {
                "name": "hostname",
                "description": "The hostname to use.",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "ServiceID",
        "description": "The `ServiceID` scalar type represents an identifier for an object of type Service.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Socket",
        "description": "A Unix or TCP/IP socket that can be mounted into a container.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this Socket.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "SocketID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "SocketID",
        "description": "The `SocketID` scalar type represents an identifier for an object of type Socket.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "SourceMap",
        "description": "Source location information.",
        "fields": [
          {
            "name": "column",
            "description": "The column number within the line.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "filename",
            "description": "The filename from the module source.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this SourceMap.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "SourceMapID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "line",
            "description": "The line number within the filename.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "module",
            "description": "The module dependency this was declared in.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "SourceMapID",
        "description": "The `SourceMapID` scalar type represents an identifier for an object of type SourceMap.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "String",
        "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "Terminal",
        "description": "An interactive terminal that clients can connect to.",
        "fields": [
          {
            "name": "id",
            "description": "A unique identifier for this Terminal.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "TerminalID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "sync",
            "description": "Forces evaluation of the pipeline in the engine.\n\nIt doesn't run the default command if no exec has been set.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "TerminalID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "TerminalID",
        "description": "The `TerminalID` scalar type represents an identifier for an object of type Terminal.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "OBJECT",
        "name": "TypeDef",
        "description": "A definition of a parameter or return type in a Module.",
        "fields": [
          {
            "name": "asEnum",
            "description": "If kind is ENUM, the enum-specific type definition. If kind is not ENUM, this will be null.",
            "type": {
              "kind": "OBJECT",
              "name": "EnumTypeDef"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asInput",
            "description": "If kind is INPUT, the input-specific type definition. If kind is not INPUT, this will be null.",
            "type": {
              "kind": "OBJECT",
              "name": "InputTypeDef"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asInterface",
            "description": "If kind is INTERFACE, the interface-specific type definition. If kind is not INTERFACE, this will be null.",
            "type": {
              "kind": "OBJECT",
              "name": "InterfaceTypeDef"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asList",
            "description": "If kind is LIST, the list-specific type definition. If kind is not LIST, this will be null.",
            "type": {
              "kind": "OBJECT",
              "name": "ListTypeDef"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asObject",
            "description": "If kind is OBJECT, the object-specific type definition. If kind is not OBJECT, this will be null.",
            "type": {
              "kind": "OBJECT",
              "name": "ObjectTypeDef"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "asScalar",
            "description": "If kind is SCALAR, the scalar-specific type definition. If kind is not SCALAR, this will be null.",
            "type": {
              "kind": "OBJECT",
              "name": "ScalarTypeDef"
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "id",
            "description": "A unique identifier for this TypeDef.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "TypeDefID"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "kind",
            "description": "The kind of type this is (e.g. primitive, list, object).",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "ENUM",
                "name": "TypeDefKind"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "optional",
            "description": "Whether this type can be set to null. Defaults to false.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            "args": [],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withConstructor",
            "description": "Adds a function for constructing a new instance of an Object TypeDef, failing if the type is not an object.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "function",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FunctionID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withEnum",
            "description": "Returns a TypeDef of kind Enum with the provided name.\n\nNote that an enum's values may be omitted if the intent is only to refer to an enum. This is how functions are able to return their own, or any other circular reference.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the enum",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "description",
                "description": "A doc string for the enum, if any",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "sourceMap",
                "description": "The source map for the enum definition.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "SourceMapID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withEnumValue",
            "description": "Adds a static value for an Enum TypeDef, failing if the type is not an enum.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "value",
                "description": "The name of the value in the enum",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "description",
                "description": "A doc string for the value, if any",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "sourceMap",
                "description": "The source map for the enum value definition.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "SourceMapID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withField",
            "description": "Adds a static field for an Object TypeDef, failing if the type is not an object.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "The name of the field in the object",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "typeDef",
                "description": "The type of the field",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TypeDefID"
                  }
                },
                "directives": []
              },
              {
                "name": "description",
                "description": "A doc string for the field, if any",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "sourceMap",
                "description": "The source map for the field definition.",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "SourceMapID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withFunction",
            "description": "Adds a function for an Object or Interface TypeDef, failing if the type is not one of those kinds.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "function",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "FunctionID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withInterface",
            "description": "Returns a TypeDef of kind Interface with the provided name.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "description",
                "description": "",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "sourceMap",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "SourceMapID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withKind",
            "description": "Sets the kind of the type.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "kind",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "ENUM",
                    "name": "TypeDefKind"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withListOf",
            "description": "Returns a TypeDef of kind List with the provided type for its elements.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "elementType",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "TypeDefID"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withObject",
            "description": "Returns a TypeDef of kind Object with the provided name.\n\nNote that an object's fields and functions may be omitted if the intent is only to refer to an object. This is how functions are able to return their own object, or any other circular reference.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "description",
                "description": "",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              },
              {
                "name": "sourceMap",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "SourceMapID"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withOptional",
            "description": "Sets whether this type can be set to null.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "optional",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Boolean"
                  }
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "withScalar",
            "description": "Returns a TypeDef of kind Scalar with the provided name.",
            "type": {
              "kind": "NON_NULL",
              "ofType": {
                "kind": "OBJECT",
                "name": "TypeDef"
              }
            },
            "args": [
              {
                "name": "name",
                "description": "",
                "defaultValue": null,
                "type": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                "directives": []
              },
              {
                "name": "description",
                "description": "",
                "defaultValue": "\"\"",
                "type": {
                  "kind": "SCALAR",
                  "name": "String"
                },
                "directives": []
              }
            ],
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "TypeDefID",
        "description": "The `TypeDefID` scalar type represents an identifier for an object of type TypeDef.",
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "ENUM",
        "name": "TypeDefKind",
        "description": "Distinguishes the different kinds of TypeDefs.",
        "enumValues": [
          {
            "name": "STRING_KIND",
            "description": "A string value.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "INTEGER_KIND",
            "description": "An integer value.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "BOOLEAN_KIND",
            "description": "A boolean value.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "SCALAR_KIND",
            "description": "A scalar value of any basic kind.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "LIST_KIND",
            "description": "A list of values all having the same type.\n\nAlways paired with a ListTypeDef.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "OBJECT_KIND",
            "description": "A named type defined in the GraphQL schema, with fields and functions.\n\nAlways paired with an ObjectTypeDef.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "INTERFACE_KIND",
            "description": "A named type of functions that can be matched+implemented by other objects+interfaces.\n\nAlways paired with an InterfaceTypeDef.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "INPUT_KIND",
            "description": "A graphql input type, used only when representing the core API via TypeDefs.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "VOID_KIND",
            "description": "A special kind used to signify that no value is returned.\n\nThis is used for functions that have no return value. The outer TypeDef specifying this Kind is always Optional, as the Void is never actually represented.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          },
          {
            "name": "ENUM_KIND",
            "description": "A GraphQL enum type and its values\n\nAlways paired with an EnumTypeDef.",
            "isDeprecated": false,
            "deprecationReason": "",
            "directives": []
          }
        ],
        "interfaces": [],
        "directives": []
      },
      {
        "kind": "SCALAR",
        "name": "Void",
        "description": "The absence of a value.\n\nA Null Void is used as a placeholder for resolvers that do not return anything.",
        "interfaces": [],
        "directives": []
      }
    ],
    "directives": [
      {
        "args": [
          {
            "defaultValue": "\"No longer supported\"",
            "deprecationReason": null,
            "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted in [Markdown](https://daringfireball.net/projects/markdown/).",
            "directives": [],
            "isDeprecated": false,
            "name": "reason",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          }
        ],
        "description": "The @deprecated built-in directive is used within the type system definition language to indicate deprecated portions of a GraphQL service's schema, such as deprecated fields on a type, arguments on a field, input fields on an input type, or values of an enum type.",
        "locations": [
          "FIELD_DEFINITION",
          "ARGUMENT_DEFINITION",
          "INPUT_FIELD_DEFINITION",
          "ENUM_VALUE"
        ],
        "name": "deprecated"
      },
      {
        "args": [
          {
            "defaultValue": null,
            "deprecationReason": null,
            "description": "Explains why this element is impure, i.e. whether it performs side effects or yield a different result with the same arguments.",
            "directives": [],
            "isDeprecated": false,
            "name": "reason",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          }
        ],
        "description": "Indicates that a field may resolve to different values when called repeatedly with the same inputs, or that the field has side effects. Impure fields are never cached.",
        "locations": [
          "FIELD_DEFINITION"
        ],
        "name": "impure"
      },
      {
        "args": [],
        "description": "Indicates that a field's selection can be removed from any query without changing the result. Meta fields are dropped from cache keys.",
        "locations": [
          "FIELD_DEFINITION"
        ],
        "name": "meta"
      },
      {
        "args": [
          {
            "defaultValue": null,
            "deprecationReason": null,
            "description": "",
            "directives": [],
            "isDeprecated": false,
            "name": "module",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          },
          {
            "defaultValue": null,
            "deprecationReason": null,
            "description": "",
            "directives": [],
            "isDeprecated": false,
            "name": "filename",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          },
          {
            "defaultValue": null,
            "deprecationReason": null,
            "description": "",
            "directives": [],
            "isDeprecated": false,
            "name": "line",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          },
          {
            "defaultValue": null,
            "deprecationReason": null,
            "description": "",
            "directives": [],
            "isDeprecated": false,
            "name": "column",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          }
        ],
        "description": "Indicates the source information for where a given field is defined.",
        "locations": [
          "SCALAR",
          "OBJECT",
          "FIELD_DEFINITION",
          "ARGUMENT_DEFINITION",
          "UNION",
          "ENUM",
          "ENUM_VALUE",
          "INPUT_OBJECT"
        ],
        "name": "sourceMap"
      }
    ]
  },
  "__schemaVersion": ""
}
