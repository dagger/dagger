// This class has been generated by dagger-java-sdk. DO NOT EDIT.
package io.dagger.client;

import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.stream.JsonParser;
import java.lang.InterruptedException;
import java.lang.Override;
import java.lang.String;
import java.lang.reflect.Type;
import java.util.concurrent.ExecutionException;

/**
 * A definition of a value in a custom enum defined in a Module.
 */
@JsonbTypeSerializer(IDAbleSerializer.class)
@JsonbTypeDeserializer(EnumValueTypeDef.Deserializer.class)
public class EnumValueTypeDef implements IDAble<EnumValueTypeDefID> {
    private QueryBuilder queryBuilder;

    private String description;

    private EnumValueTypeDefID id;

    private String name;

    /**
     * Empty constructor for JSON-B deserialization
     */
    protected EnumValueTypeDef() {
    }

    EnumValueTypeDef(QueryBuilder queryBuilder) {
        this.queryBuilder = queryBuilder;
    }

    /**
     * <p>A doc string for the enum value, if any.</p>
     */
    public String description() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.description != null) {
            return description;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("description");
        return nextQueryBuilder.executeQuery(java.lang.String.class);
    }

    /**
     * <p>A unique identifier for this EnumValueTypeDef.</p>
     */
    public EnumValueTypeDefID id() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.id != null) {
            return id;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("id");
        return nextQueryBuilder.executeQuery(EnumValueTypeDefID.class);
    }

    /**
     * <p>The name of the enum value.</p>
     */
    public String name() throws InterruptedException, ExecutionException, DaggerQueryException {
        if (this.name != null) {
            return name;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("name");
        return nextQueryBuilder.executeQuery(java.lang.String.class);
    }

    /**
     * <p>The location of this enum value declaration.</p>
     */
    public SourceMap sourceMap() {
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("sourceMap");
        return new SourceMap(nextQueryBuilder);
    }

    public static class Deserializer implements JsonbDeserializer<EnumValueTypeDef> {
        @Override
        public EnumValueTypeDef deserialize(JsonParser parser, DeserializationContext ctx,
                Type type) {
            String id = ctx.deserialize(String.class, parser);
            EnumValueTypeDef o = Dagger.dag().loadEnumValueTypeDefFromID(new EnumValueTypeDefID(id));
            return o;
        }
    }
}
