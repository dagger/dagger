// This class has been generated by dagger-java-sdk. DO NOT EDIT.
package io.dagger.client;

import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.stream.JsonParser;
import java.lang.Integer;
import java.lang.InterruptedException;
import java.lang.Override;
import java.lang.String;
import java.lang.reflect.Type;
import java.util.concurrent.ExecutionException;

@JsonbTypeSerializer(IDAbleSerializer.class)
@JsonbTypeDeserializer(LLMTokenUsage.Deserializer.class)
public class LLMTokenUsage implements IDAble<LLMTokenUsageID> {
    private QueryBuilder queryBuilder;

    private LLMTokenUsageID id;

    private Integer inputTokens;

    private Integer outputTokens;

    private Integer totalTokens;

    /**
     * Empty constructor for JSON-B deserialization
     */
    protected LLMTokenUsage() {
    }

    LLMTokenUsage(QueryBuilder queryBuilder) {
        this.queryBuilder = queryBuilder;
    }

    /**
     * <p>A unique identifier for this LLMTokenUsage.</p>
     */
    public LLMTokenUsageID id() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.id != null) {
            return id;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("id");
        return nextQueryBuilder.executeQuery(LLMTokenUsageID.class);
    }

    /**
     * <p></p>
     */
    public Integer inputTokens() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.inputTokens != null) {
            return inputTokens;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("inputTokens");
        return nextQueryBuilder.executeQuery(java.lang.Integer.class);
    }

    /**
     * <p></p>
     */
    public Integer outputTokens() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.outputTokens != null) {
            return outputTokens;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("outputTokens");
        return nextQueryBuilder.executeQuery(java.lang.Integer.class);
    }

    /**
     * <p></p>
     */
    public Integer totalTokens() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.totalTokens != null) {
            return totalTokens;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("totalTokens");
        return nextQueryBuilder.executeQuery(java.lang.Integer.class);
    }

    public static class Deserializer implements JsonbDeserializer<LLMTokenUsage> {
        @Override
        public LLMTokenUsage deserialize(JsonParser parser, DeserializationContext ctx, Type type) {
            String id = ctx.deserialize(String.class, parser);
            LLMTokenUsage o = Dagger.dag().loadLLMTokenUsageFromID(new LLMTokenUsageID(id));
            return o;
        }
    }
}
