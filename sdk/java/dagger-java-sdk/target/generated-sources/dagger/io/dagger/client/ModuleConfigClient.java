// This class has been generated by dagger-java-sdk. DO NOT EDIT.
package io.dagger.client;

import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.stream.JsonParser;
import java.lang.Boolean;
import java.lang.InterruptedException;
import java.lang.Override;
import java.lang.String;
import java.lang.reflect.Type;
import java.util.concurrent.ExecutionException;

/**
 * The client generated for the module.
 */
@JsonbTypeSerializer(IDAbleSerializer.class)
@JsonbTypeDeserializer(ModuleConfigClient.Deserializer.class)
public class ModuleConfigClient implements IDAble<ModuleConfigClientID> {
    private QueryBuilder queryBuilder;

    private Boolean dev;

    private String directory;

    private String generator;

    private ModuleConfigClientID id;

    /**
     * Empty constructor for JSON-B deserialization
     */
    protected ModuleConfigClient() {
    }

    ModuleConfigClient(QueryBuilder queryBuilder) {
        this.queryBuilder = queryBuilder;
    }

    /**
     * <p>If true, generate the client in developer mode.</p>
     */
    public Boolean dev() throws InterruptedException, ExecutionException, DaggerQueryException {
        if (this.dev != null) {
            return dev;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("dev");
        return nextQueryBuilder.executeQuery(java.lang.Boolean.class);
    }

    /**
     * <p>The directory the client is generated in.</p>
     */
    public String directory() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.directory != null) {
            return directory;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("directory");
        return nextQueryBuilder.executeQuery(java.lang.String.class);
    }

    /**
     * <p>The generator to use</p>
     */
    public String generator() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.generator != null) {
            return generator;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("generator");
        return nextQueryBuilder.executeQuery(java.lang.String.class);
    }

    /**
     * <p>A unique identifier for this ModuleConfigClient.</p>
     */
    public ModuleConfigClientID id() throws InterruptedException, ExecutionException,
            DaggerQueryException {
        if (this.id != null) {
            return id;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("id");
        return nextQueryBuilder.executeQuery(ModuleConfigClientID.class);
    }

    public static class Deserializer implements JsonbDeserializer<ModuleConfigClient> {
        @Override
        public ModuleConfigClient deserialize(JsonParser parser, DeserializationContext ctx,
                Type type) {
            String id = ctx.deserialize(String.class, parser);
            ModuleConfigClient o = Dagger.dag().loadModuleConfigClientFromID(new ModuleConfigClientID(id));
            return o;
        }
    }
}
