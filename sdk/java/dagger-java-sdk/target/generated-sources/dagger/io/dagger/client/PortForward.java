// This class has been generated by dagger-java-sdk. DO NOT EDIT.
package io.dagger.client;

import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;

/**
 * Port forwarding rules for tunneling network traffic.
 */
public class PortForward implements InputValue {
    private Integer backend;

    private Integer frontend;

    private NetworkProtocol protocol;

    public Integer getBackend() {
        return this.backend;
    }

    public void setBackend(Integer backend) {
        this.backend = backend;
    }

    public PortForward withBackend(Integer backend) {
        this.backend = backend;
        return this;
    }

    public Integer getFrontend() {
        return this.frontend;
    }

    public void setFrontend(Integer frontend) {
        this.frontend = frontend;
    }

    public PortForward withFrontend(Integer frontend) {
        this.frontend = frontend;
        return this;
    }

    public NetworkProtocol getProtocol() {
        return this.protocol;
    }

    public void setProtocol(NetworkProtocol protocol) {
        this.protocol = protocol;
    }

    public PortForward withProtocol(NetworkProtocol protocol) {
        this.protocol = protocol;
        return this;
    }

    @Override
    public Map<String, Object> toMap() {
        HashMap<String, Object> map = new HashMap<String, Object>();
        if (this.backend != null) {
            map.put("backend", this.backend);
        }
        if (this.frontend != null) {
            map.put("frontend", this.frontend);
        }
        if (this.protocol != null) {
            map.put("protocol", this.protocol);
        }
        return map;
    }
}
