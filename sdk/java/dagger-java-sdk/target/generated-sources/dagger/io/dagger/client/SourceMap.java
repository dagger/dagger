// This class has been generated by dagger-java-sdk. DO NOT EDIT.
package io.dagger.client;

import jakarta.json.bind.annotation.JsonbTypeDeserializer;
import jakarta.json.bind.annotation.JsonbTypeSerializer;
import jakarta.json.bind.serializer.DeserializationContext;
import jakarta.json.bind.serializer.JsonbDeserializer;
import jakarta.json.stream.JsonParser;
import java.lang.Integer;
import java.lang.InterruptedException;
import java.lang.Override;
import java.lang.String;
import java.lang.reflect.Type;
import java.util.concurrent.ExecutionException;

/**
 * Source location information.
 */
@JsonbTypeSerializer(IDAbleSerializer.class)
@JsonbTypeDeserializer(SourceMap.Deserializer.class)
public class SourceMap implements IDAble<SourceMapID> {
    private QueryBuilder queryBuilder;

    private Integer column;

    private String filename;

    private SourceMapID id;

    private Integer line;

    private String module;

    /**
     * Empty constructor for JSON-B deserialization
     */
    protected SourceMap() {
    }

    SourceMap(QueryBuilder queryBuilder) {
        this.queryBuilder = queryBuilder;
    }

    /**
     * <p>The column number within the line.</p>
     */
    public Integer column() throws InterruptedException, ExecutionException, DaggerQueryException {
        if (this.column != null) {
            return column;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("column");
        return nextQueryBuilder.executeQuery(java.lang.Integer.class);
    }

    /**
     * <p>The filename from the module source.</p>
     */
    public String filename() throws InterruptedException, ExecutionException, DaggerQueryException {
        if (this.filename != null) {
            return filename;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("filename");
        return nextQueryBuilder.executeQuery(java.lang.String.class);
    }

    /**
     * <p>A unique identifier for this SourceMap.</p>
     */
    public SourceMapID id() throws InterruptedException, ExecutionException, DaggerQueryException {
        if (this.id != null) {
            return id;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("id");
        return nextQueryBuilder.executeQuery(SourceMapID.class);
    }

    /**
     * <p>The line number within the filename.</p>
     */
    public Integer line() throws InterruptedException, ExecutionException, DaggerQueryException {
        if (this.line != null) {
            return line;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("line");
        return nextQueryBuilder.executeQuery(java.lang.Integer.class);
    }

    /**
     * <p>The module dependency this was declared in.</p>
     */
    public String module() throws InterruptedException, ExecutionException, DaggerQueryException {
        if (this.module != null) {
            return module;
        }
        QueryBuilder nextQueryBuilder = this.queryBuilder.chain("module");
        return nextQueryBuilder.executeQuery(java.lang.String.class);
    }

    public static class Deserializer implements JsonbDeserializer<SourceMap> {
        @Override
        public SourceMap deserialize(JsonParser parser, DeserializationContext ctx, Type type) {
            String id = ctx.deserialize(String.class, parser);
            SourceMap o = Dagger.dag().loadSourceMapFromID(new SourceMapID(id));
            return o;
        }
    }
}
