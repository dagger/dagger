// This class has been generated by dagger-java-sdk. DO NOT EDIT.
package io.dagger.client;

/**
 * Distinguishes the different kinds of TypeDefs.
 */
public enum TypeDefKind {
    /**
     * A string value.
     */
    STRING_KIND,

    /**
     * A float value.
     */
    FLOAT_KIND,

    /**
     * An integer value.
     */
    INTEGER_KIND,

    /**
     * A boolean value.
     */
    BOOLEAN_KIND,

    /**
     * A scalar value of any basic kind.
     */
    SCALAR_KIND,

    /**
     * A list of values all having the same type.<br/><br/>Always paired with a ListTypeDef.
     */
    LIST_KIND,

    /**
     * A named type defined in the GraphQL schema, with fields and functions.<br/><br/>Always paired with an ObjectTypeDef.
     */
    OBJECT_KIND,

    /**
     * A named type of functions that can be matched+implemented by other objects+interfaces.<br/><br/>Always paired with an InterfaceTypeDef.
     */
    INTERFACE_KIND,

    /**
     * A graphql input type, used only when representing the core API via TypeDefs.
     */
    INPUT_KIND,

    /**
     * A special kind used to signify that no value is returned.<br/><br/>This is used for functions that have no return value. The outer TypeDef specifying this Kind is always Optional, as the Void is never actually represented.
     */
    VOID_KIND,

    /**
     * A GraphQL enum type and its values<br/><br/>Always paired with an EnumTypeDef.
     */
    ENUM_KIND
}
