<?php

/**
 * This class has been generated by dagger-php-sdk. DO NOT EDIT.
 */

declare(strict_types=1);

namespace Dagger;

/**
 * Static configuration for a module (e.g. parsed contents of dagger.json)
 */
class ModuleConfig extends Client\AbstractObject implements Client\IdAble
{
    public function dependencies(): array
    {
        $leafQueryBuilder = new \Dagger\Client\QueryBuilder('dependencies');
        return (array)$this->queryLeaf($leafQueryBuilder, 'dependencies');
    }

    public function exclude(): array
    {
        $leafQueryBuilder = new \Dagger\Client\QueryBuilder('exclude');
        return (array)$this->queryLeaf($leafQueryBuilder, 'exclude');
    }

    /**
     * A unique identifier for this ModuleConfig.
     */
    public function id(): ModuleConfigId
    {
        $leafQueryBuilder = new \Dagger\Client\QueryBuilder('id');
        return new \Dagger\ModuleConfigId((string)$this->queryLeaf($leafQueryBuilder, 'id'));
    }

    public function include(): array
    {
        $leafQueryBuilder = new \Dagger\Client\QueryBuilder('include');
        return (array)$this->queryLeaf($leafQueryBuilder, 'include');
    }

    public function name(): string
    {
        $leafQueryBuilder = new \Dagger\Client\QueryBuilder('name');
        return (string)$this->queryLeaf($leafQueryBuilder, 'name');
    }

    public function root(): string
    {
        $leafQueryBuilder = new \Dagger\Client\QueryBuilder('root');
        return (string)$this->queryLeaf($leafQueryBuilder, 'root');
    }

    public function sdk(): string
    {
        $leafQueryBuilder = new \Dagger\Client\QueryBuilder('sdk');
        return (string)$this->queryLeaf($leafQueryBuilder, 'sdk');
    }
}
