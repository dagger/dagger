[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dagger-io"
version = "0.0.0"
description = "A client package for running Dagger pipelines in Python."
license = "Apache-2.0"
authors = ["Dagger <hello@dagger.io>"]
readme = "README.md"
homepage = "https://dagger.io"
documentation = "https://docs.dagger.io/sdk/python"
repository = "https://github.com/dagger/dagger/tree/main/sdk/python"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Framework :: AnyIO",
    "Framework :: Pytest",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    # FIXME: just waiting on windows tests for this
    # "Operating System :: OS Independent",
    "Typing :: Typed",
]
packages = [
    { include = "dagger", from = "src" },
]

[tool.poetry.urls]
"Tracker" = "https://github.com/dagger/dagger/issues"
"Release Notes" = "https://github.com/dagger/dagger/releases?q=tag%3Asdk%2Fpython%2Fv0"
"Community" = "https://discord.gg/ufnyBtc8uY"
"Twitter" = "https://twitter.com/dagger_io"

[tool.poetry.scripts]
# FIXME: uncomment when extensions become available
# dagger-server-py = "dagger.server.cli:app"
dagger-py = "dagger.cli:app"

[tool.poetry.dependencies]
python = "^3.10"
anyio = ">=3.6.2"
attrs = ">=22.1.0"
cattrs = ">=22.2.0"
# FIXME: replace next two lines with the following when gql version 3.5.0 is released
# gql = {version = ">=3.5.0", extras = ["httpx"]}
gql = ">=3.4.0"
httpx = ">=0.23.1"
strawberry-graphql = {version = ">=0.133.5", optional = true}
typer = {version = ">=0.6.1", extras = ["all"]}
beartype = ">=0.11.0"
platformdirs = ">=2.6.2"

[tool.poetry.extras]
server = ["strawberry-graphql"]

[tool.poetry.group.test.dependencies]
pytest = ">=7.2.0"
pytest-mock = ">=3.10.0"
pytest-subprocess = ">=1.4.2"
pytest-lazy-fixture = "^0.6.3"

[tool.poetry.group.lint.dependencies]
autoflake = ">=1.3.1"
black = ">=22.3.0"
flake8 = ">=4.0.1"
flake8-black = ">=0.3"
flake8-bugbear = ">=22.9.23"
flake8-eradicate = ">=1.3.0"
flake8-isort = ">=5.0.0"
isort = ">=5.10.1"
mypy = ">=0.942"
typing_extensions = ">=4.4.0"

[tool.poetry.group.dev.dependencies]
poethepoet = ">=0.16.4"

[tool.poetry.group.docs.dependencies]
sphinx = ">=5.3.0"
sphinx-rtd-theme = "^1.1.1"

[tool.poe.env]
GEN_PATH = "./src/dagger/api"

[tool.poe.env.DOCS_SNIPPETS]
default = "../../docs/current/sdk/python/snippets"

[tool.poe.tasks]
test = "pytest"
unittest = "pytest -m 'not slow'"
typing = "mypy src/dagger tests"

[tool.poe.tasks.docs]
cmd = "sphinx-build -v . _build"
cwd = "docs"

[tool.poe.tasks.lint]
sequence = [
    "flake8 ${target}",
    "black --check --diff ${target}",
    "isort --check-only --diff ${target}",
]
default_item_type = "cmd"

[[tool.poe.tasks.lint.args]]
name = "target"
positional = true
multiple = true
default = "."

[tool.poe.tasks.lint-docs]
ref = "lint ${DOCS_SNIPPETS}"

[tool.poe.tasks.fmt]
sequence = [
    {cmd = "autoflake -ir . ${DOCS_SNIPPETS}"},
    {cmd = "isort . ${DOCS_SNIPPETS}"},
    {cmd = "black . ${DOCS_SNIPPETS}"},
    {ref = "lint . ${DOCS_SNIPPETS}"},
]

[tool.poe.tasks.generate]
sequence = [
    "dagger-py generate --output ${GEN_PATH}/gen.py",
    "dagger-py generate --output ${GEN_PATH}/gen_sync.py --sync",
    "isort ${GEN_PATH}/gen*.py",
    "black ${GEN_PATH}/gen*.py",
]
default_item_type = "cmd"

[tool.pytest.ini_options]
testpaths = ["tests/"]
addopts = [
    "--import-mode=importlib",
]
markers = [
    "slow: mark test as slow (integration)",
    "provision: mark provisioning tests",
]

[tool.mypy]
disallow_untyped_defs = false
follow_imports = "normal"
# ignore_missing_imports = true
install_types = true
non_interactive = true
warn_redundant_casts = true
pretty = true
show_column_numbers = true
warn_no_return = false
warn_unused_ignores = true
# plugins = [
#     "strawberry.ext.mypy_plugin",
# ]

[tool.black]
include = '\.pyi?$'
target-version = ["py310", "py311"]

[tool.isort]
profile = "black"
known_first_party = ["dagger"]

[tool.autoflake]
quiet = true
recursive = true
expand-star-imports = true
ignore-init-module-imports = true
imports = ["graphql", "gql"]
remove-all-unused-imports = true
remove-duplicate-keys = true
remove-unused-variables = true
