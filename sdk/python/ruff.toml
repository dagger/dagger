extend = "ruff_defaults.toml"
src = ["**/src", "**/tests"]
target-version = "py310"

[lint]
ignore-init-module-imports = true
unfixable = [
    # Don't remove `print` statements, just warn.
    "T201",
]
extend-ignore = [
    # Type inferrance is ok in a lot of places.
    "ANN",
    # This rule doesn't know to ignore a subclass override
    # so we get false positives for unused arguments.
    "ARG002",
    # Black can handle trailing commas automatically.
    "COM812",
    # Can't control using a library with boolean arguments.
    "FBT",
    # TODO: Document public modules and packages.
    "D100",
    "D104",
    # Imperative mood only makes sense in functions, not classes.
    "D401",
    # Not using timezones in this project.
    "DTZ",
    # Allow logging with default %. You need custom setup to use `extra`.
    "G002",
    # Valid use in pytest, docs and examples.
    "INP001",
    # Unnecessary variable assignment before `return` statement
    # doesn't seem to work as expected.
    "RET504",
    # We don't use asserts as runtime validation guarantees.
    "S101",
    # Don't guard types. Don't want to stringize them.
    "TCH",
    # Don't require author and link in TODO comments.
    "TD002",
    "TD003",
    "FIX002",
    # Pandas
    "PD",
]

[lint.extend-per-file-ignores]
"./docs/*" = ["D1"]
"./runtime/*" = ["D1"]
"./codegen/*" = ["D1"]
"./src/dagger/client/gen.py" = [
    # Not much control over field names and docs coming from the API.
    # Note: We could detect built-in shadowing like the reserved
    # keywords but these built-ins aren't being used in the generated
    # code so no need to bother.
    "A",
    "D",
    # Too hard to properly wrap long lines in codegen.
    "E501",
    # Allow access to private members as it's controlled by our own library.
    "SLF001",
    # Too many arguments to function call.
    "PLR0913",
    # `Optional` is preferred over `| None` because of how
    # beartype handles forward references.
    "UP007",
]
# Ignore built-in shadowing in test mocks.
"./tests/client/test_inputs.py" = ["A", "ERA001"]
"./tests/*.py" = [
    # Ignore security issues in tests.
    "S",
    # Magic value comparison doesn't apply to tests.
    "PLR2004",
    # Allow more than one statement in pytest.raises.
    "PT012",
    # No public interfaces.
    "D1",
    # Allow accessing private fields in tests.
    "SLF001",
    # Allow covering `Optional` in tests.
    "UP007",
]
# Allow alias imports in __init__.
"./**/__init__.py" = ["PLC0414"]
# Allow some patterns to redefine imports in __init__.
"./src/**/__init__.py" = ["I001", "F403", "PLC0414"]
# Typer uses boolean parameters for the CLI. Let it.
"./**/src/**/cli.py" = ["FBT"]

[lint.isort]
known-first-party = ["dagger", "codegen"]

[lint.pydocstyle]
convention = "numpy"
